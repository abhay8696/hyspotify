{"version":3,"sources":["firebaseConfig.js","contexts/spotifyTokenContext.js","contexts/userDataContext.js","contexts/miniPlayer2Context.js","contexts/spotifyTrackUriContext.js","contexts/chattingWithContext.js","api/serverRequests.js","spotify/styles/searchStyles.js","spotify/searchComp.js","loadingCompStyles.js","loadingComp.js","contexts/playingTrackContext.js","spotify/styles/musicboxStyles.js","spotify/musicBox.js","spotify/styles/navbarStyles.js","spotify/spotifyNav.js","spotify/styles/miniPlayerStyles.js","chats/miniPlayer2.js","chats/styles/ChatNavbarStyles.js","chats/chatNavbar.js","chats/styles/chatBoxStyles.js","chats/chatBox.js","chats/chatList.js","chats/styles/chatListStyles.js","spotify/spotifyRoot.js","spotify/styles/playBoxStyles.js","spotify-logo.svg","spotify/playBox.js","spotify/styles/spotifyStyles.js","spotify/spotifyLogin.js","spotify/hooks/useAuth.js","spotify/loginStyles.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SpotifyTokenContext","createContext","UserDataContext","MiniPlayer2Context","SpotifyTrackUriContext","ChattingWithContext","Config","productionBackend","console","log","db","getFirestore","isSharingSongAPI","data","a","myID","myName","frndID","frndName","isSharingSong","songSharer","myChatRef","doc","frndChatRef","getDoc","chatRefDocSnap1","chatRefDocSnap2","exists","updateDoc","setDoc","name","playSharedSongAPI","uri","trackName","sharedUri","sharedTrackName","addMsgToMyDatabase","msg","msgRef","collection","addDoc","from","createdAt","admin","firestore","Timestamp","now","toDate","then","lastMsgText","lastMsgTime","addMsgToFrndsDatabase","SearchStyles","makeStyles","theme","searchComp","width","padding","display","flexDirection","alignItems","backgroundColor","color","searchCompHeader","textAlign","searchBar","margin","position","searchBox","flexGrow","fontSize","borderRadius","outline","borderStyle","closeSearchButton","cursor","right","top","border","searchResults","height","overflow","opacity","track","animation","trackImg","trackInfo","marginLeft","justifyContent","borderBottom","flex","trackTitle","trackArtist","SearchComp","props","classes","closeSearchDrawer","playTrack","useContext","spotifyToken","useState","searchText","setSearchText","searchResult","setSearchResult","useEffect","undefined","cancel","config","method","url","headers","axios","res","tracks","items","map","smallestImg","album","images","reduce","smallest","img","artist","artists","title","albumUrl","catch","err","className","placeholder","onChange","evt","target","value","autoFocus","closeSearchDiv","onClick","array","item","push","src","displayResults","LoadingCompStyles","loadingComp","dot","animationName","animationDuration","animationIterationCount","animationTimingFunction","left","LoadingComp","description","PlayingTrackContext","MusicBoxStyles","musicBox","overflowY","maxHeight","maxWidth","background","marginTop","topTracksHeader","fontWeight","topTrackList","overflowX","topTrack","topTrackImg","topTrackInfo","topTrackArtist","borderColor","searchDrawer","fontFamily","minWidth","MusicBox","insideChatBox","closeSongDrawer","userData","setSpotifyTrackUri","top50","setTop50","myTopTracks","setMyTopTracks","newReleases","setNewReleases","setSearchDrawer","fetchTop50","fetchMyTopTracks","fetchNewReleases","window","localStorage","setItem","albums","displaymyTopTracks","shortName","length","substr","concat","id","topTrackName","style","displayTop50","displayNewReleases","albumName","fetchAlbumTracks","drawerTypeFunc","screen","anchorType","Drawer","anchor","open","onClose","displayMusicBox","NavbarStyles","spotifyNav","navbar","zIndex","hy","spotifyH1","abhay","kamble","dp_chats","chatIcon","marginRight","dpImg","spotifyTitle2","frndDP","spotifyTitle_name","hy2","spotifyH12","profileInfo","profileInfoBody","profileName","profileNameXS","logoutDiv","bottom","logoutButt","profileInfoImg","chatListHead","transform","SpotifyNav","setDpImg","profileDrawer","setProfileDrawer","setSpotifyToken","chattingWith","loggedOut","insideChatsList","toggleChatListDrawer","toggleChatBox","alt","spotifyTitle","document","fullScreen","mozFullScreen","webkitIsFullScreen","activeElement","requestFullscreen","display_name","proDp","proName","clear","profileSummary","MiniPlayerStyles","miniPlayer","playNotificaton","playingSongName","fontStyle","MiniPlayer2","vertical","horizontal","trackNotificationOpen","setTrackNotificationOpen","spotifyTrackUri","playingTrack","setPlayingTrack","handleTrackNotification","token","showSaveIcon","play","callback","state","isPlaying","uris","ChatNavbarStyles","navbarSmall","spotify","hySpotifyChats","navBody","dp_name","close","ChatNavbar","showDP","ChatBoxStyles","chatBox","navbarBig","songSwitch","musicIcon","songDrawer","songDrawerTitle","listenTogetherIcons","msgArea","boxSizing","msgBucket","myMsg","boxShadow","frndMsg","time","typingArea","textBox","sendButt","backendRoute","ChatBox","miniPlayer2","setMiniPlayer2","textMsg","setTextMsg","setMsgBucket","setSongDrawer","setIsSharingSong","tempStyle","dailogOpen","setDailogOpen","dummy","useRef","arr","query","orderBy","limit","sharingRef","onSnapshot","snaps","forEach","current","scrollIntoView","behavior","setTimeout","sendMsg","preventDefault","replace","Switch","val","isSharingSongFunc","checked","ref","timestamp","date","hrs","mins","Date","seconds","getHours","getMinutes","displayMsgs","onSubmit","Dialog","DialogTitle","DialogActions","ChatListStyles","chatList","chatListItem","dp","chatListName","chatListNav","chatDrawer","ChatList","setChattingWith","allUsers","setAllUsers","chatBoxOpen","setChatBoxOpen","fetchUsers","get","error","closeChatBox","user","openChatBox","displayAllUsers","PlayBoxStyles","body2","imgReactAudioPlayer","currentTrackInfo","currentSongImg","noPremium","marginBottom","reactAudioPlayer","PlayBox","currentPlaying","setCurrentPlaying","preview_url","imgSrc","showCurrentTrack","spotifyLogo","autoPlay","controls","product","SpotifyStyles","spotifyRoot","spotifyBody","body3","searchIcon","chatListDrawer","clientID","redirectUri","SpotifyRoot","setUserData","chatDrawerOn","setChatDrawerOn","fetchUserData","post","body1","UseAuth","code","accessToken","setAccessToken","setRefreshToken","setExpiresIn","productionHost","refreshToken","expiresIn","history","pushState","LoginStyles","spotifyLogin","loadingDots","pageBody","introText","loginButton","loginButt","takingToSpotify","SpotifyLogin","spotifyclientID","authURL","URLSearchParams","location","search","clicked","setClicked","href","App","spotifytoken","getItem","Provider","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAeeA,EAFHC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iB,qDCPNC,EAAsBC,wBAAc,MCApCC,EAAkBD,wBAAc,MCAhCE,EAAqBF,wBAAc,MCAnCG,EAAyBH,wBAAc,MCAvCI,EAAsBJ,wBAAc,M,uBCQ3BK,EAAOC,kBACzBC,QAAQC,IAAI,mBAGhB,IAAMC,EAAKC,YAAapB,GAGXqB,EAAgB,uCAAG,WAAMC,GAAN,iCAAAC,EAAA,6DACpBC,EAA8DF,EAA9DE,KAAMC,EAAwDH,EAAxDG,OAAQC,EAAgDJ,EAAhDI,OAAQC,EAAwCL,EAAxCK,SAAUC,EAA8BN,EAA9BM,cAAeC,EAAeP,EAAfO,WACjDC,EAAYC,YAAIZ,EAAI,QAASK,EAAM,QAApB,UAA+BG,EAA/B,YAA2CD,IAC1DM,EAAcD,YAAIZ,EAAI,QAASO,EAAQ,QAAtB,UAAiCD,EAAjC,YAA2CD,IAHtC,SAKES,YAAOH,GALT,cAKtBI,EALsB,gBAMED,YAAOD,GANT,OAMtBG,EANsB,OAQzBD,EAAgBE,UAAYD,EAAgBC,UAC3CC,YAAUP,EAAW,CACjBF,cAAgBA,EAChBC,WAAYA,IAEhBQ,YAAUL,EAAa,CACnBJ,cAAgBA,EAChBC,WAAYA,MAGhBS,YAAOR,EAAW,CACdS,KAAMZ,EACNC,cAAgBA,EAChBC,WAAYA,IAEhBS,YAAON,EAAa,CAChBO,KAAMd,EACNG,cAAgBA,EAChBC,WAAYA,KA1BQ,4CAAH,sDAgChBW,EAAiB,uCAAG,WAAMlB,GAAN,iCAAAC,EAAA,6DACrBC,EAAmDF,EAAnDE,KAAMC,EAA6CH,EAA7CG,OAAQC,EAAqCJ,EAArCI,OAAQC,EAA6BL,EAA7BK,SAAUc,EAAmBnB,EAAnBmB,IAAKC,EAAcpB,EAAdoB,UACvCZ,EAAYC,YAAIZ,EAAI,QAASK,EAAM,QAApB,UAA+BG,EAA/B,YAA2CD,IAC1DM,EAAcD,YAAIZ,EAAI,QAASO,EAAQ,QAAtB,UAAiCD,EAAjC,YAA2CD,IAHrC,SAKCS,YAAOH,GALR,cAKvBI,EALuB,gBAMCD,YAAOD,GANR,OAMvBG,EANuB,OAQ1BD,EAAgBE,UAAYD,EAAgBC,WAC3CC,YAAUP,EAAW,CACjBa,UAAWF,EACXG,gBAAiBF,IAErBL,YAAUL,EAAa,CACnBW,UAAWF,EACXG,gBAAiBF,KAfI,4CAAH,sDA+BjBG,EAAkB,uCAAG,WAAOrB,EAAMG,EAAUD,EAAQoB,GAA/B,iBAAAvB,EAAA,6DAC1BO,EAAYC,YAAIZ,EAAI,QAASK,EAAM,QAApB,UAA+BG,EAA/B,YAA2CD,IAC1DqB,EAASC,YAAWlB,EAAW,YAFL,SAIDG,YAAOH,GAJN,cAKZM,UACdnB,QAAQC,IAAI,oBACG+B,YAAOF,EAAQ,CAC1BG,KAAM,KACNJ,IAAKA,EACLK,UAAWC,IAAMC,UAAUC,UAAUC,MAAMC,WAC5CC,MAAK,WACJpB,YAAUP,EAAW,CACjBS,KAAMZ,EACN+B,YAAaZ,EACba,YAAaP,IAAMC,UAAUC,UAAUC,MAAMC,gBAIrDvC,QAAQC,IAAI,wBACG+B,YAAOF,EAAQ,CAC1BG,KAAM,KACNJ,IAAKA,EACLK,UAAWC,IAAMC,UAAUC,UAAUC,MAAMC,WAC5CC,MAAK,WACJnB,YAAOR,EAAW,CACdS,KAAMZ,EACN+B,YAAaZ,EACba,YAAaP,IAAMC,UAAUC,UAAUC,MAAMC,eA5B3B,2CAAH,4DAkClBI,EAAqB,uCAAG,WAAMlC,EAAQD,EAAQD,EAAMsB,GAA5B,iBAAAvB,EAAA,6DAC7BS,EAAcD,YAAIZ,EAAI,QAASO,EAAQ,QAAtB,UAAiCD,EAAjC,YAA2CD,IAC5DuB,EAASC,YAAWhB,EAAa,YAFJ,SAIJC,YAAOD,GAJH,cAKfI,SACCa,YAAOF,EAAQ,CAC1BG,KAAMzB,EACNqB,IAAKA,EACLK,UAAWC,IAAMC,UAAUC,UAAUC,MAAMC,WAC5CC,MAAK,WACJpB,YAAUL,EAAa,CACnBO,KAAMd,EACNiC,YAAaZ,EACba,YAAaP,IAAMC,UAAUC,UAAUC,MAAMC,cAItCP,YAAOF,EAAQ,CAC1BG,KAAMzB,EACNqB,IAAKA,EACLK,UAAWC,IAAMC,UAAUC,UAAUC,MAAMC,WAC5CC,MAAK,WACJnB,YAAON,EAAa,CAChBO,KAAMd,EACNiC,YAAaZ,EACba,YAAaP,IAAMC,UAAUC,UAAUC,MAAMC,cA1BxB,2CAAH,4D,UCXnBK,EApGMC,aAAW,SAAAC,GAAK,MAAI,CACrCC,WAAY,CACRC,MAAO,OACPC,QAAS,UACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiB,UACjB,4CAA6C,CACzCA,gBAAiB,UACjBC,MAAO,UAGfC,iBAAiB,CACbC,UAAW,UAEfC,UAAU,CACNT,MAAO,MACPE,QAAS,OAAQE,WAAY,SAC7BM,OAAO,MACPC,SAAU,YAEdC,UAAW,CACPC,SAAU,IACVZ,QAAU,WACVa,SAAU,OACVC,aAAc,OACdC,QAAS,OACTC,YAAa,OACb,UAAW,IAIfC,kBAAkB,CAEdC,OAAQ,UACRR,SAAU,WACVS,MAAO,MACPC,IAAK,MACLC,OAAQ,kBACR,QAAQ,CAEJhB,MAAO,UAGfiB,cAAe,CACXC,OAAQ,OACRxB,MAAO,MACPyB,SAAU,OACV,4CAA6C,CACzC,uBAAwB,CACpBpB,gBAAiB,UACjBL,MAAO,MACP0B,QAAS,OAEb,6BAA8B,CAC1BrB,gBAAiB,OACjBL,MAAO,MACPmB,OAAQ,UACRJ,aAAc,OAElB,WAAW,CACPT,MAAO,UACPa,OAAQ,aAIpBQ,MAAO,CACHzB,QAAS,OACTQ,OAAQ,WACRkB,UAAW,iBAEf,oBAAqB,CACjB,KAAM,CACFF,QAAS,KAEb,OAAQ,CACJA,QAAS,MAGjBG,SAAS,CACLd,aAAc,QAElBe,UAAU,CACNC,WAAY,MACZ7B,QAAS,OAAQC,cAAe,SAChC6B,eAAgB,SAChBC,aAAc,oBACdC,KAAM,IACNpB,SAAU,QAEdqB,WAAW,GAGXC,YAAY,CACRtB,SAAU,OACVY,QAAS,W,yBCmCFW,EA1HI,SAACC,GAEhB,IAAMC,EAAU3C,IAGR4C,EAAiCF,EAAjCE,kBAAmBC,EAAcH,EAAdG,UAE3B,EACkCC,qBAAWlG,GAD7C,mBACCmG,EADD,KAIA,GAJA,KAK8BC,mBAAS,KADvC,mBACCC,EADD,KACaC,EADb,OAEkCF,mBAAS,IAF3C,mBAECG,EAFD,KAEeC,EAFf,KAKAC,qBAAU,WACN,IAAIJ,EAAY,OAAQC,EAAc,IACtCE,OAAgBE,GAChB,IAAIC,GAAS,EACPC,EAAO,CACTC,OAAQ,MACRC,IAAI,4DAAD,OAA8DT,GACjEU,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAiCpC,OA9BAa,IAAMJ,GAAQ5D,MAAK,SAACiE,GACbN,IACHnG,QAAQC,IAAIwG,EAAIpG,KAAKqG,OAAOC,OAC5BX,EACIS,EAAIpG,KAAKqG,OAAOC,MAAMC,KAAI,SAAAjC,GACtB,IAAMkC,EAAclC,EAAMmC,MAAMC,OAAOC,QACnC,SAACC,EAAUC,GACP,OAAGA,EAAI1C,OAASyC,EAASzC,OAAe0C,EACjCD,IAEXtC,EAAMmC,MAAMC,OAAO,IAGvB,MAAM,CACFI,OAAQxC,EAAMyC,QAAQ,GAAG9F,KACzB+F,MAAO1C,EAAMrD,KACbE,IAAKmD,EAAMnD,IACX8F,SAAUT,EACVxG,KAAMsE,OAIlB3E,QAAQC,IAAI8F,OAEfwB,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,MAKT,kBAAKrB,GAAS,KACtB,CAACN,IAoCJ,OACI,sBAAK4B,UAAWlC,EAAQxC,WAAxB,UACI,sBAAM0E,UAAWlC,EAAQhC,iBAAzB,4BACA,sBAAKkE,UAAWlC,EAAQ9B,UAAxB,UACI,uBACAiE,YAAY,YACZC,SAAY,SAAAC,GAAG,OAAG9B,EAAc8B,EAAIC,OAAOC,QAC3CL,UAAWlC,EAAQ3B,UACnBmE,WAAS,IAET,qBAAKN,UAAWlC,EAAQyC,eAAxB,SACI,sBACAC,QAAS,kBAAKzC,KACdiC,UAAWlC,EAAQrB,kBAFnB,SAIA,cAAC,IAAD,WAIR,qBAAKuD,UAAWlC,EAAQhB,cAAxB,SAnDS,WACb,IAAI2D,EAAQ,GACZ,GAAGnC,EAyBC,OAxBA/F,QAAQC,IAAI8F,GACZA,EAAaa,KAAI,SAAAuB,GACbD,EAAME,KACF,sBACAX,UAAWlC,EAAQZ,MAEnBsD,QAAS,WACLxC,EAAU0C,EAAK3G,IAAK2G,EAAKd,MAAOc,EAAK9H,MACrCyF,EAAc,IACdN,KANJ,UAQI,+BACI,qBACA6C,IAAKF,EAAKb,SAAShB,IACnBmB,UAAWlC,EAAQV,aAGvB,sBAAK4C,UAAWlC,EAAQT,UAAxB,UACI,uBAAM2C,UAAWlC,EAAQJ,WAAzB,cAAuCgD,EAAKd,MAA5C,OACA,uBAAMI,UAAWlC,EAAQH,YAAzB,cAAwC+C,EAAKhB,OAA7C,YAdHgB,EAAKb,SAAShB,SAmBpB4B,EAyBFI,SC/FFC,EA/BW1F,aAAW,SAAAC,GAAK,MAAI,CAC1C0F,YAAa,CACT7E,SAAU,WACVX,MAAO,QACPqB,IAAK,MACLnB,QAAS,OACTE,WAAY,SACZD,cAAe,SACfG,MAAO,SAEXmF,IAAK,CACDvF,QAAS,QACTF,MAAO,SACPwB,OAAQ,SACRnB,gBAAiB,QACjBU,aAAc,MACdL,OAAQ,OACRgF,cAAe,gBACfC,kBAAmB,SACnBC,wBAAyB,WACzBC,wBAAyB,cACzBlF,SAAU,YAEd,0BAA2B,CACvB,KAAM,CAAEN,gBAAiB,UAAWyF,KAAM,SAC1C,MAAO,CAAEzF,gBAAiB,UAAWyF,KAAM,QAE3C,OAAQ,CAAEzF,gBAAiB,UAAWyF,KAAM,cCXrCC,EAdK,SAACzD,GAEjB,IAAMC,EAAUgD,IAERS,EAAgB1D,EAAhB0D,YAER,OACI,sBAAKvB,UAAWlC,EAAQiD,YAAxB,UACI,qBAAKf,UAAWlC,EAAQkD,MACxB,+BAAOO,QCXNC,EAAsBxJ,wBAAc,MCqJlCyJ,EApJQrG,aAAW,SAAAC,GAAK,MAAI,CACvCqG,SAAU,CACNC,UAAW,SACXC,UAAW,qBACX,4CAA6C,CACzCvF,SAAU,OACVwF,SAAU,QAEd,4CAA6C,CACzCxF,SAAU,QAEd,uBAAwB,CACpBd,MAAO,SACPK,gBAAiB,WAErB,6BAA8B,CAC1BkG,WAAY,UACZpF,OAAQ,UACRJ,aAAc,MACdW,QAAS,KAEb,mCAAoC,CAChC6E,WAAY,OAEhB,UAAU,CACN,6BAA8B,CAC1BA,WAAY,OACZpF,OAAQ,UACRJ,aAAc,MACdW,QAAS,MAGjB,uBAAuB,CACnB4E,SAAU,MACV9E,OAAQ,OACRT,aAAc,MACdyF,UAAW,OACXvG,QAAS,IAGjBwG,gBAAgB,CACZ/F,OAAQ,oBACRI,SAAU,OACV4F,WAAY,OAEhBC,aAAc,CACVzG,QAAS,OACT0G,UAAW,SACX,uBAAwB,CACpB,4CAA6C,CACzCvG,gBAAiB,UACjBmB,OAAQ,MACRE,QAAS,QAMjB,6BAA8B,CAC1BrB,gBAAiB,OACjBmB,OAAQ,MACRL,OAAQ,UACRJ,aAAc,QAGtB8F,SAAU,CACN3G,QAAS,OACTC,cAAe,SACfgB,OAAQ,UACRqF,UAAW,MACXzE,WAAY,MACZ,UAAU,CACNzB,MAAO,YAGf,qBAAsB,CAClB,KAAM,CACFoB,QAAS,KAEb,OAAQ,CACJA,QAAS,MAGjBoF,YAAa,CACTtF,OAAQ,QACRxB,MAAO,QACPe,aAAc,OACda,UAAW,8BAGfmF,aAAc,CACV7G,QAAS,OACTC,cAAe,UAEnB6G,eAAe,CACXtF,QAAS,MACTZ,SAAU,QAEdL,UAAU,CAENP,QAAS,OACTQ,OAAO,oBAEXE,UAAW,CACPC,SAAU,IACVZ,QAAU,WACVI,gBAAiB,QACjBS,SAAU,OACVC,aAAc,OACdC,QAAS,OACTiG,YAAa,UACbhG,YAAa,OACbX,MAAO,UACPJ,QAAS,OACTE,WAAY,SACZ4B,eAAgB,iBAEpBkF,aAAa,CACTC,WAAY,aACZjH,QAAS,OAAQC,cAAe,SAAUC,WAAY,SACtD,4CAA6C,CACzCkG,SAAU,OACV,QAAS,CACLA,SAAU,OACVE,UAAW,QACXhF,OAAQ,QAEZ,mBAAmB,CACfxB,MAAO,OACPK,gBAAiB,YAGzB,4CAA6C,CACzC+G,SAAU,QACV,QAAS,CACLA,SAAU,QACVZ,UAAW,QACXhF,OAAQ,UAIpBwD,eAAe,CACX9E,QAAS,OAAQ8B,eAAgB,SACjC5B,WAAY,SACZC,gBAAiB,e,4BC0JVgH,EApRE,SAAC/E,GAEd,IAAMC,EAAU2D,IAGRoB,EAAkDhF,EAAlDgF,cAAeC,EAAmCjF,EAAnCiF,gBAAiB5J,EAAkB2E,EAAlB3E,cAGxC,EACkC+E,qBAAWlG,GAD7C,mBACCmG,EADD,aAE0BD,qBAAWhG,IAFrC,mBAEC8K,EAFD,aAGoC9E,qBAAW7F,IAH/C,gCAIwC6F,qBAAW9F,IAJnD,mBAIkB6K,GAJlB,aAKoC/E,qBAAWuD,GAL/C,mBAQA,GARA,UASsBrD,sBADtB,mBACE8E,EADF,KACSC,EADT,OAEkC/E,qBAFlC,mBAEEgF,EAFF,KAEeC,EAFf,OAGkCjF,qBAHlC,mBAGEkF,EAHF,KAGeC,EAHf,OAIoCnF,oBAAS,GAJ7C,mBAIEsE,EAJF,KAIgBc,EAJhB,OAKoCpF,oBAAS,GAL7C,gCAM4CA,oBAAS,IANrD,gCAOoCA,oBAAS,IAP7C,6BAUAK,qBAAU,WACNgF,KACAC,KACAC,OACD,CAACX,IAGJ,IACA/E,EAAY,SAACjE,EAAKC,EAAWpB,GAYzBoK,EAAmB,CAACjJ,MAAKC,YAAWd,gBAAeN,SACnD+K,OAAOC,aAAaC,QAAQ,oBAAqB9J,GAC9C+I,GAAiBA,KAExBU,GAAa,WACT,IAAM7E,EAAO,CACTC,OAAQ,MACRC,IAAK,wEACLC,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAGpCa,IAAMJ,GAAQ5D,MAAK,SAACiE,GAChBkE,EAASlE,EAAIpG,KAAKqG,OAAOC,UAE5BY,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,OAGpB0D,GAAmB,WACf,IAAM9E,EAAO,CACTC,OAAQ,MACRC,IAAK,2EACLC,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAGpCa,IAAMJ,GAAQ5D,MAAK,SAACiE,GACbA,EAAIpG,KAAKsG,OAAOkE,EAAepE,EAAIpG,KAAKsG,UAE9CY,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,OAGpB2D,GAAmB,WACf,IAAM/E,EAAO,CACTC,OAAQ,MACRC,IAAK,4DACLC,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAGpCa,IAAMJ,GAAQ5D,MAAK,SAACiE,GAChBzG,QAAQC,IAAI,gBACZ8K,EAAetE,EAAIpG,KAAKkL,OAAO5E,OAC/B3G,QAAQC,IAAI,mBAEfsH,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,OAsBpBgE,GAAqB,WACjB,IAEQ/J,EAFJyG,EAAQ,GACT0C,GAECA,EAAYhE,KAAI,SAAAjC,GACZ,IAAI8G,EAAS,UAAM9G,EAAMrD,KAAZ,cAAsBqD,EAAMrD,KAAKoK,QAG1CjK,EAFDgK,EAAUC,OAAS,GAEND,EAAUE,OAAO,EAAE,IAAIC,OAAO,OAC3BjH,EAAMrD,KACzB4G,EAAME,KACF,sBACAX,UAAWlC,EAAQsE,SACnB5B,QAAS,kBAAKxC,EAAUd,EAAMnD,IAAKmD,EAAMrD,KAAMqD,IAF/C,UAII,qBACA0D,IAAK1D,EAAMmC,MAAMC,OAAO,GAAGT,IAE3BmB,UAAWlC,EAAQuE,aADdnF,EAAMkH,IAGX,sBAAKpE,UAAWlC,EAAQwE,aAAxB,UACI,uBAAMtC,UAAWlC,EAAQuG,aAAzB,cAAyCrK,EAAzC,OACA,uBAAMgG,UAAWlC,EAAQyE,eAAzB,cAA2CrF,EAAMyC,QAAQ,GAAG9F,KAA5D,YAV0BqD,EAAMkH,QAqBpD,OALoB,IAAjB3D,EAAMwD,QAAcxD,EAAME,KACzB,mBACA2D,MAAO,CAAChH,WAAY,OACpB0C,UAAWlC,EAAQyE,eAFnB,kEAIG9B,GAEX8D,GAAe,WACX,GAAGtB,EAAM,CACL,IAAgBjJ,EAAZyG,EAAQ,GAwBZ,OAvBAwC,EAAM9D,KAAI,SAAAuB,GACN,IAAIsD,EAAS,UAAMtD,EAAKxD,MAAMrD,KAAjB,cAA2B6G,EAAKxD,MAAMrD,KAAKoK,QAGpDjK,EAFDgK,EAAUC,OAAS,GAEND,EAAUE,OAAO,EAAE,IAAIC,OAAO,OAC3BzD,EAAKxD,MAAMrD,KAC9B4G,EAAME,KACF,sBACAX,UAAWlC,EAAQsE,SACnB5B,QAAS,kBAAKxC,EAAU0C,EAAKxD,MAAMnD,IAAK2G,EAAKxD,MAAMrD,KAAM6G,EAAKxD,QAF9D,UAII,qBACA0D,IAAKF,EAAKxD,MAAMmC,MAAMC,OAAO,GAAGT,IAEhCmB,UAAWlC,EAAQuE,aADd3B,EAAKxD,MAAMkH,IAGhB,sBAAKpE,UAAWlC,EAAQwE,aAAxB,UACI,uBAAMtC,UAAWlC,EAAQuG,aAAzB,cAAyCrK,EAAzC,OACA,uBAAMgG,UAAWlC,EAAQyE,eAAzB,cAA2C7B,EAAKxD,MAAMyC,QAAQ,GAAG9F,KAAjE,YAV0B6G,EAAKxD,MAAMkH,QAe9C3D,IAGf+D,GAAqB,WACjB,GAAGnB,EAAY,CACX,IAAgBoB,EAAZhE,EAAQ,GAwBZ,OAvBA4C,EAAYlE,KAAI,SAAAuB,GACZ,IAAIsD,EAAS,UAAMtD,EAAK7G,KAAX,cAAqB6G,EAAK7G,KAAKoK,QAGxCQ,EAFDT,EAAUC,OAAS,GAEND,EAAUE,OAAO,EAAE,IAAIC,OAAO,OAC3BzD,EAAK7G,KACxB4G,EAAME,KACF,sBACAX,UAAWlC,EAAQsE,SACnB5B,QAAS,kBA/FN,SAAC4D,GAChB,IAAMzF,EAAO,CACTC,OAAQ,MACRC,IAAI,qCAAD,OAAuCuF,EAAvC,WACHtF,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAGpCa,IAAMJ,GAAQ5D,MAAK,SAACiE,GAChBzG,QAAQC,IAAI,aACZD,QAAQC,IAAIwG,EAAIpG,MAChBL,QAAQC,IAAI,gBAEfsH,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,MA+EU2E,CAAiBhE,EAAK0D,KAFpC,UAII,qBACAxD,IAAKF,EAAKpB,OAAO,GAAGT,IAEpBmB,UAAWlC,EAAQuE,aADd3B,EAAK0D,IAGV,sBAAKpE,UAAWlC,EAAQwE,aAAxB,UACI,uBAAMtC,UAAWlC,EAAQuG,aAAzB,cAAyCI,EAAzC,OACA,uBAAMzE,UAAWlC,EAAQyE,eAAzB,cAA2C7B,EAAKf,QAAQ,GAAG9F,KAA3D,YAV0B6G,EAAK0D,QAexC3D,IAGf1C,GAAoB,WAChBwF,GAAgB,IA8CpBoB,GAAiB,WACd,OAAIhB,OAAOiB,OAAOrJ,MAAQ,IAAa,OAC1B,OAGhB,OACI,qBAAKyE,UAAWlC,EAAQ4D,SAAxB,SAlDc,WACd,IAAMmD,EAAaF,KACvB,OACI,qCACI,sBAAK3E,UAAWlC,EAAQ9B,UAAxB,UACI,uBACAgE,UAAWlC,EAAQ3B,UACnBqE,QAAS,kBAAI+C,GAAgB,IAF7B,6BAKI,cAAC,IAAD,OAEJ,cAACuB,EAAA,EAAD,CACIC,OAAQF,EACRG,KAAMvC,EACNwC,QAAS,kBAAKlH,MACdiC,UAAWlC,EAAQ2E,aAJvB,SAMI,cAAC,EAAD,CACA1E,kBAAmBA,GACnBC,UAAWA,SAInB,qBAAKgC,UAAWlC,EAAQkE,gBAAxB,6BACA,qBAAKhC,UAAWlC,EAAQoE,aAAxB,SACKqC,OAEL,qBAAKvE,UAAWlC,EAAQkE,gBAAxB,+BACA,qBAAKhC,UAAWlC,EAAQoE,aAAxB,SACK6B,OAEFlB,EAOD,KANF,qCACA,qBAAK7C,UAAWlC,EAAQkE,gBAAxB,iCACA,qBAAKhC,UAAWlC,EAAQoE,aAAxB,SACKsC,aAgBLU,M,QC3GGC,EAzLM/J,aAAW,SAAAC,GAAK,YAAI,CACrC+J,WAAW,CAEP5H,aAAc,oBACd,4CAA6C,CAEzCT,OAAQ,kBAERV,SAAU,SACVJ,OAAQ,YACRR,QAAS,OAAQE,WAAY,UAEjC,4CAA6C,CACzCH,QAAS,cAETa,SAAU,QAEd,UAAW,CACPc,UAAW,gBAGnBkI,OAAQ,CACJ5J,QAAS,OAAQE,WAAY,SAC7B4B,eAAgB,gBAChB+H,OAAQ,KACR7H,KAAM,KAEV8H,GAAG,CACC1J,MAAO,SAEX2J,UAAU,CACN3J,MAAO,WAEX4J,MAAO,CACH5J,MAAO,UACPQ,SAAU,UAEdqJ,OAAQ,CACJ7J,MAAO,QACPQ,SAAU,UAEdsJ,SAAU,CACNlK,QAAS,OACTE,WAAY,UAEhBiK,SAAU,CACN/J,MAAO,UACPQ,SAAU,OACVwJ,YAAa,OACb,4CAA6C,CACzCpK,QAAS,oBAGjBqK,MAAM,CACF/I,OAAQ,OACRT,aAAc,MACd,4CAA6C,CACzCS,OAAQ,SAGhBgJ,cAAc,CACVtK,QAAS,OACTE,WAAY,YAEhBqK,OAAO,CACHjJ,OAAQ,OACRT,aAAc,MACd,4CAA6C,CACzCS,OAAQ,QAEZ,QAAS,CACLA,OAAQ,OACRxB,MAAO,SAGf0K,kBAAkB,CACd5J,SAAU,SACViB,WAAY,MACZ7B,QAAS,OACTE,WAAY,aACZD,cAAe,SACf6B,eAAgB,UAEpB2I,IAAK,CACD7J,SAAU,UAEd8J,WAAW,CACP9J,SAAU,SACVR,MAAO,WAEX5C,SAAS,CACLoD,SAAU,SACVR,MAAO,SAEXuK,aAAW,GACPnF,cAAe,eACfC,kBAAmB,SAFZ,8BAGQ,gBAHR,mCAIa,aAJb,gCAMU,WANV,wBAOE,QAPF,wBAQE,eARF,uBASC,KATD,GAWXmF,gBAAiB,CACb5K,QAAS,OACTC,cAAe,SACf6B,eAAgB,SAChBD,WAAY,SACZL,QAAS,IACTE,UAAW,6BAIfmJ,YAAY,CACRjK,SAAU,QAEdkK,cAAc,CACVlK,SAAU,QAEdmK,UAAW,CACP/K,QAAS,OACTE,WAAY,WACZ4B,eAAgB,WAChBE,KAAM,IACNR,QAAS,IACTE,UAAW,4BACXjB,SAAU,WACVuK,OAAQ,MACR9J,MAAO,OAEX+J,WAAW,CACPjL,QAAS,OAAQE,WAAY,SAC7BkB,OAAQ,kBACRrB,QAAS,UACTa,SAAU,SACVC,aAAc,OACd,QAAS,CACLL,OAAQ,YAEZ,UAAW,CACPJ,MAAO,UACPD,gBAAiB,SAErBc,OAAQ,WAEZiK,eAAgB,CACZ5J,OAAQ,QACRxB,MAAO,QACPe,aAAc,MACdW,QAAS,IACTE,UAAW,4BACX,QAAS,CACL5B,MAAO,QACPwB,OAAQ,UAIhB6J,aAAa,CACT,4CAA6C,CACzCnL,QAAS,oBAIjB,yBAA0B,CACtB,KAAM,CACFoL,UAAW,oBACX5J,QAAS,KAEb,MAAO,CACHA,QAAS,KAEb,OAAQ,CACJ4J,UAAW,kBACX5J,QAAS,MAGjB,iBAAkB,CACd,OAAQ,CACJA,QAAS,U,sDC7JC5E,EAAOC,kBACzBC,QAAQC,IAAI,mBAGhB,IAoOesO,EApOI,SAACjJ,GAEhB,IAAMC,EAAUqH,IAGhB,EACoBhH,qBADpB,mBACC2H,EADD,KACQiB,EADR,OAE8B5I,oBAAS,GAFvC,gCAGoCA,oBAAS,IAH7C,mBAGC6I,EAHD,KAGgBC,EAHhB,KAMA,EACkChJ,qBAAWlG,GAD7C,mBACemP,GADf,aAE0BjJ,qBAAWhG,GAFrC,mBAEC8K,EAFD,aAGoC9E,qBAAW7F,IAH/C,mBAGE+O,EAHF,KAOEC,GAPF,KAOqFvJ,EAAnFuJ,WAAWC,EAAwExJ,EAAxEwJ,gBAAiBC,EAAuDzJ,EAAvDyJ,qBAAsBzE,EAAiChF,EAAjCgF,cAAe0E,EAAkB1J,EAAlB0J,cAGnE/I,qBAAU,WACHuE,GAAYA,EAASzD,OAAO,GAC3ByH,EAAS,qBACLnG,IAAKmC,EAASzD,OAAO,GACrBU,UAAWlC,EAAQgI,MACnB0B,IAAI,KACJhH,QAAS,kBAAKyG,GAAiB,OAGnCF,EAAS,QAEd,CAAChE,IAkEJ,OACI,mCACA,sBAAK/C,UAAWlC,EAAQsH,WAAxB,UACA,sBAAKpF,UAAWlC,EAAQuH,OAAxB,UAEI+B,EACI,sBAAKpH,UAAWlC,EAAQ2J,aAAxB,UACI,sBAAMzH,UAAWlC,EAAQyH,GAAzB,gBACA,sBAAMvF,UAAWlC,EAAQ0H,UAAzB,qBACA,sBAAMxF,UAAWlC,EAAQ4H,OAAzB,SAAkC,MAClC,sBAAM1F,UAAWlC,EAAQ2H,MAAzB,SAAiC,iBACjC,sBAAMzF,UAAWlC,EAAQ4H,OAAzB,SAAkC,UAExC,KAGD0B,IAAarE,GAAasE,GAAoBxE,EAuC/C,KAtCI,qCACA,sBAAK7C,UAAWlC,EAAQ2J,aAAxB,UACI,sBAAMzH,UAAWlC,EAAQyH,GAAzB,gBACA,sBAAMvF,UAAWlC,EAAQ0H,UAAzB,qBACC6B,EACD,sBAAMrH,UAAWlC,EAAQyH,GAAzB,mBACE,QAIN,sBAAKvF,UAAWlC,EAAQ6H,SAAxB,UACI,cAAC,IAAD,CACA3F,UAAWlC,EAAQ8H,SACnBvJ,SAAS,QACTmE,QAAU,WACN8G,IACuBI,SAASC,YAAcD,SAASE,eAAiBF,SAASG,oBAC7DH,SAASI,cAAcC,uBAG9CjC,EACG,qBACAlF,IAAKmC,EAASzD,OAAO,GAAGT,IACxBmB,UAAWlC,EAAQgI,MACnB0B,IAAI,KACJhH,QAAS,kBAAKyG,GAAiB,MAG/B,cAAC,IAAD,CACA5K,SAAS,QACT2D,UAAWlC,EAAQgI,MACnBtF,QAAS,kBAAKyG,GAAiB,YAU3CI,EACI,qCACA,sBAAKrH,UAAWlC,EAAQ8I,aAAxB,UACI,sBAAM5G,UAAWlC,EAAQyH,GAAzB,gBACA,sBAAMvF,UAAWlC,EAAQ0H,UAAzB,qBACA,sBAAMxF,UAAWlC,EAAQyH,GAAzB,sBAEJ,cAAC,IAAD,CACAvF,UAAWlC,EAAQ8H,SACnBvJ,SAAS,QACTmE,QAAU,kBAAK8G,UAGjB,KAGFzE,GAAiBsE,EACb,qCACA,sBAAKnH,UAAWlC,EAAQiI,cAAxB,UACKoB,EAAa7H,OAAO,GACjB,qBACAsB,IAAKuG,EAAa7H,OAAO,GAAGT,IAC5BmB,UAAWlC,EAAQkI,OACnBwB,IAAI,KACJhH,QAAS,kBAAKyG,GAAiB,MAG/B,qBAAKjH,UAAWlC,EAAQkI,OAAxB,SACI,cAAC,IAAD,CACA3J,SAAS,QACTmE,QAAS,kBAAKyG,GAAiB,QAIvC,sBAAKjH,UAAWlC,EAAQmI,kBAAxB,UACA,gCACI,sBAAMjG,UAAWlC,EAAQoI,IAAzB,gBACA,sBAAMlG,UAAWlC,EAAQqI,WAAzB,qBACA,sBAAMnG,UAAWlC,EAAQoI,IAAzB,sBAEJ,sBAAMlG,UAAWlC,EAAQ7E,SAAzB,SACKkO,EAAaa,qBAIlB,cAAC,IAAD,CACAhI,UAAWlC,EAAQ8H,SACnBvJ,SAAS,QACTmE,QAAU,WACN+G,UAKZ,QAGJ,cAACzC,EAAA,EAAD,CACIC,OAAQ,MACRC,KAAMgC,EACN/B,QAAS,kBAAKgC,GAAiB,IAHnC,UAIWG,GAAarE,EA9KX,WACb,IACIkF,EAAOC,EAAS1B,EAAY,6BAmChC,OAlCGW,GACCe,EAAUf,EAAaa,aAEnBC,EADDd,EAAa7H,OAAO,GACX,qBACRsB,IAAKuG,EAAa7H,OAAO,GAAGT,IAC5BmB,UAAWlC,EAAQ6I,eACnBa,IAAI,OAEM,qBAAMxH,UAAWlC,EAAQ6I,eAAzB,SACV,cAAC,IAAD,QAGJuB,EAAUnF,EAASiF,aAEfC,EADDlF,EAASzD,OAAO,GACP,qBACRsB,IAAKmC,EAASzD,OAAO,GAAGT,IACxBmB,UAAWlC,EAAQ6I,eACnBa,IAAI,OAEM,qBAAMxH,UAAWlC,EAAQ6I,eAAzB,SACN,cAAC,IAAD,MAGRH,EAAY,qBAAKxG,UAAWlC,EAAQ0I,UAAxB,SACI,sBACAxG,UAAWlC,EAAQ4I,WACnBlG,QAAS,kBAhC7B0G,EAAgB,WAChBvD,OAAOC,aAAauE,SA6BA,UAII,0CACA,cAAC,IAAD,UAMxB,sBAAKnI,UAAWlC,EAAQsI,YAAxB,UAEM6B,EACF,qBAAKjI,UAAWlC,EAAQuI,gBAAxB,SAEI6B,EAAQjE,QAAU,EAClB,sBAAMjE,UAAWlC,EAAQwI,YAAzB,SAAuC4B,IAEvC,sBAAMlI,UAAWlC,EAAQyI,cAAzB,SAAyC2B,MAG3C1B,KA6H6B4B,GAAmB,a,oBC9N/CC,GAtBUjN,aAAW,SAAAC,GAAK,MAAI,CACzCiN,WAAY,CACRpM,SAAU,WACVuK,OAAQ,IACRlL,MAAO,QACP,4CAA6C,CACzCsG,SAAU,SAGlB0G,gBAAiB,CACbrM,SAAU,WACVV,QAAS,OACTc,aAAc,OACdV,gBAAiB,MACjBgB,IAAK,QAET4L,gBAAiB,CACbC,UAAW,SACXxG,WAAY,YC+GLyG,I,gBAnHK,SAAC7K,GAEjB,IAAMC,EAAUuK,KAEhB,EACkDlK,oBAAS,GAD3D,gCAEoDA,mBAAS,CACzD6G,MAAM,EACN2D,SAAU,MACVC,WAAY,YALhB,mBAECC,EAFD,KAEwBC,EAFxB,KAgBA,GAPuCD,EAA/BF,SAA+BE,EAArBD,WAAqBC,EAAT7D,KAQJ/G,qBAAWhG,IADrC,gCAEoCgG,qBAAW7F,IAF/C,gCAGkC6F,qBAAWlG,IAH7C,mBAGCmG,EAHD,aAIwCD,qBAAW9F,IAJnD,mBAIC4Q,EAJD,aAKoC9K,qBAAWuD,IAL/C,mBAKEwH,EALF,KAKgBC,EALhB,KAQAzK,qBAAU,WACHuK,EAAgBhP,KACfmP,IACAD,GAAgB,IAEhBA,GAAgB,KAErB,CAACF,IAEJvK,qBAAU,WAGN,OAFAyK,GAAgB,GAET,WACH1Q,QAAQC,IAAI,4BACZyQ,GAAgB,MAErB,IAMH,IAIAC,EAA0B,WACtBJ,EAAyB,CACrB9D,MAAM,EACN2D,SAAU,MACVC,WAAY,YAoCpB,OACI,qBACA5I,UAAWlC,EAAQwK,WADnB,SAGI,cAAC,KAAD,CAEAa,MAASjL,EACTkL,cAAY,EACZC,KAAML,EACNM,SAAU,SAAAC,GACNhR,QAAQC,IAAI+Q,GACRA,EAAMC,WAAWP,GAAgB,GAClCM,EAAMC,WAAWP,GAAgB,IAExCQ,KAAQV,EAAgBhP,IAAM,CAACgP,EAAgBhP,KAAO,SClFnD2P,GAzCUtO,aAAW,SAAAC,GAAK,MAAI,CACzCsO,YAAa,CACT5H,UAAW,OACXtG,QAAS,OACTC,cAAe,UAEnBkO,QAAQ,CACJ/N,MAAO,WAEXgO,eAAe,CACXxN,SAAU,UAEdyN,QAAS,CACLrO,QAAS,OACTE,WAAY,SACZ4B,eAAgB,gBAChB/B,QAAS,OAEbuO,QAAQ,CACJtO,QAAS,OACTE,WAAY,SACZ,QAAQ,CACJJ,MAAO,SACPwB,OAAQ,WAGhB,4CAA6C,CACzCiN,MAAO,CACH,WAAW,CACPnO,MAAO,UACPa,OAAQ,aAIpB,4CAA6C,CACzCiN,YAAa,CACTlO,QAAS,wBCINwO,GAnCI,SAACpM,GAEhB,IAAMC,EAAU4L,KAERvC,EAAgCtJ,EAAhCsJ,aAAcI,EAAkB1J,EAAlB0J,cAS1B,OACI,sBAAKvH,UAAWlC,EAAQ6L,YAAxB,UACI,sBAAK3J,UAAWlC,EAAQ+L,eAAxB,UACI,sBAAM7J,UAAWlC,EAAQyH,GAAzB,gBACA,sBAAMvF,UAAWlC,EAAQ8L,QAAzB,qBACA,sBAAM5J,UAAWlC,EAAQyH,GAAzB,sBAEJ,sBAAKvF,UAAWlC,EAAQgM,QAAxB,UACI,sBAAK9J,UAAWlC,EAAQiM,QAAxB,UAdC,WACL,GAAG5C,EACC,OAAGA,EAAa7H,OAAO2E,OAAe1L,QAAQC,KAAI,GAC3C,cAAC,IAAD,IAYF0R,GACD,8BAAM/C,EAAeA,EAAaa,aAAe,UAErD,qBACAxH,QAAS,kBAAK+G,KACdvH,UAAWlC,EAAQkM,MAFnB,SAGI,cAAC,IAAD,aCkJDG,GAnLO/O,aAAW,SAAAC,GAAK,MAAI,CACtC+O,QAAU,CACN7O,MAAO,QACPmH,WAAY,oCACZ9G,gBAAiB,UACjBmB,OAAQ,OACRlB,MAAO,QACPI,OAAQ,MACRR,QAAS,OACTC,cAAe,SACf,4CAA6C,CACzCH,MAAO,OACPc,SAAU,oBACVuF,UAAW,qBACb,4CAA6C,IAInDyI,UAAW,CACP,4CAA6C,CACzC5O,QAAS,oBAGjBkO,YAAY,CACR,4CAA6C,CACzClO,QAAS,oBAGjB6O,WAAY,CACR7O,QAAS,OACT8B,eAAgB,gBAChB5B,WAAY,SACZC,gBAAiB,UACjBC,MAAO,SAIX0O,UAAU,CACNtJ,cAAe,WACfC,kBAAmB,QACnBE,wBAAyB,cACzByE,YAAa,OAEjB,qBAAsB,CAClB,KAAM,CACFgB,UAAW,mBAEf,OAAQ,CACJA,UAAW,gBAGnB2D,WAAW,CACP9H,WAAY,aACZlF,aAAc,oBACd5B,gBAAiB,UACjBC,MAAO,SAEX4O,gBAAgB,CACZ1O,UAAW,SACXM,SAAU,SACV0F,UAAW,MACXlG,MAAO,WAEX6O,oBAAqB,CACjBjP,QAAS,OAAQ8B,eAAgB,gBAAiB5B,WAAY,UAElEgP,QAAQ,CACJlN,KAAM,IACNhC,QAAS,OACTC,cAAe,SACf6B,eAAgB,gBAChB5B,WAAY,SACZqB,SAAU,OACV4N,UAAW,aACX,QAAS,CAAErP,MAAO,QAClB4G,UAAW,UAEf0I,UAAU,aACNpP,QAAQ,OACRC,cAAe,iBACfsB,SAAU,OACVX,SAAU,SACVC,aAAc,oBACd,4CAA6C,CACzC,uBAAwB,CACpBf,MAAO,SACPK,gBAAiB,WAErB,6BAA8B,CAC1BkG,WAAY,OACZxF,aAAc,MACdW,QAAS,IACT,UAAU,CACNP,OAAQ,cAhBf,WAoBK,QAEdoO,MAAO,CACHlP,gBAAiB,QACjB+G,SAAU,MACV9G,MAAO,QACPgG,SAAU,MACV,gBAAiB,qBACjBvE,WAAY,OACZ9B,QAAS,UACTS,OAAQ,UACRF,UAAW,OACXgP,UAAW,mCACXtP,QAAS,OACTC,cAAe,SACfuF,cAAe,uBACfC,kBAAmB,QACnB,4CAA6C,IAIjD8J,QAAQ,CACJpP,gBAAiB,UACjB+G,SAAU,MACV9G,MAAO,QACPgG,SAAU,MACV,gBAAiB,qBACjBgE,YAAa,OACbrK,QAAS,UACTS,OAAQ,UACRF,UAAW,OACXgP,UAAW,mCACXtP,QAAS,OACTC,cAAe,SACfuF,cAAe,wBACfC,kBAAmB,SAEvB+J,KAAM,CACFlP,UAAW,QACXM,SAAU,OACVoM,UAAW,SACXxL,QAAS,MACT,4CAA6C,CACzCZ,SAAU,QAIlB6O,WAAW,CACP3P,MAAO,OACPE,QAAS,OAAQE,WAAY,SAC7BM,OAAO,kBACPK,aAAc,OACdV,gBAAiB,QACjBC,MAAO,QACP,4CAA6C,CACzCN,MAAO,QAGf4P,QAAS,CACL/O,SAAU,IACVZ,QAAU,WAEVc,aAAc,OACdD,SAAU,OACVE,QAAS,OACTC,YAAa,OACb,UAAW,IAIf4O,SAAU,CACNvF,YAAa,OACbvJ,aAAc,MACd,4CAA6C,CACzC,WAAW,CACPT,MAAO,UACPa,OAAQ,iB,sFC3IFrE,EAAOC,kBACzBC,QAAQC,IAAI,mBAGhB,ICtBI6S,GDmVWC,GA7TC,SAACzN,GAEb,IAAMC,EAAUqM,KAGhB,EAC0BlM,qBAAWhG,GADrC,mBACC8K,EADD,aAEoC9E,qBAAW7F,IAF/C,mBAEE+O,EAFF,aAGwClJ,qBAAW9F,IAHnD,mBAGkB6K,GAHlB,aAIoC/E,qBAAWuD,GAJ/C,gCAKkCvD,qBAAW/F,IAL7C,mBAKEqT,EALF,KAKeC,EALf,KAQA,EAC0BrN,mBAAS,IADnC,mBACEsN,EADF,KACWC,EADX,OAE8BvN,mBAAS,IAFvC,mBAEE0M,EAFF,KAEac,EAFb,OAGgCxN,oBAAS,GAHzC,mBAGEqM,EAHF,KAGcoB,EAHd,OAIsCzN,oBAAS,GAJ/C,mBAIEjF,EAJF,KAIiB2S,EAJjB,OAK8B1N,mBAAS,IALvC,mBAKE2N,EALF,cAMgC3N,oBAAS,IANzC,qBAME4N,GANF,MAMcC,GANd,MAOMC,GAAQC,mBAEN3E,GAAsB1J,EAAtB0J,cAAe9O,GAAOoF,EAAPpF,GAUvB+F,qBAAU,WAkBN,OAjBA7F,EAAiB,CACbG,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvB9O,eAAc,EACdC,WAAY,OAEhBW,EAAkB,CACdhB,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvBjO,IAAK,KACLC,UAAW,OAGR,WACHzB,QAAQC,IAAI,sBACZqT,GAAiB,GACjBL,GAAe,GACf7S,EAAiB,CACbG,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvB9O,eAAc,EACdC,WAAY,OAEhBW,EAAkB,CACdhB,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvBjO,IAAK,KACLC,UAAW,UAGpB,IACHwE,oBAAS,sBAAC,sCAAA3F,EAAA,sDACAC,EAAOiK,EAASqB,GACtBnL,EAAWkO,EAAaa,aACxBhP,EAASmO,EAAa/C,GAEnB3L,KAEK0T,EAAM,GAEJ9R,EAAS+R,YAAM9R,YAAW7B,GAAI,QAASK,EAAM,QAApB,UAAgCG,EAAhC,YAA4CD,GAAU,YAAaqT,YAAQ,YAAa,QAASC,YAAM,KAChIC,EAAaH,YACf/S,YAAIZ,GAAI,QAASK,EAAM,QAApB,UAAgCG,EAAhC,YAA4CD,KAGnCwT,YAAWnS,GAAQ,SAAAoS,GAE/BN,EAAM,GACNM,EAAMC,SAAQ,SAAArT,GACV8S,EAAIxL,KAAJ,6BAAatH,EAAIT,QAAjB,IAAyBwL,GAAI/K,EAAI+K,SAErCuH,EAAaQ,GACVF,GAAMU,SACLV,GAAMU,QAAQC,eAAe,CAACC,SAAU,cAIpBL,YAAWD,GAAY,SAAAE,GAE/C,GADAlU,QAAQC,IAAI,yBACTiU,EAAM7T,OAAO,CACZ,MAAmD6T,EAAM7T,OAAjDqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAAnB,EAAoCf,aAClBgO,EAAaa,cAAiB/N,GAE5C4R,GAAiB,GAEjBY,EAAM7T,OAAOM,gBACb2S,GAAiB,GACjBL,GAAe,IAEhBiB,EAAM7T,OAAOM,eAAesS,GAAe,GAC3CiB,EAAM7T,OAAOM,eAAiBe,GAC7B+I,EAAmB,CAACjJ,IAAKE,EAAWD,UAAWE,EAAiBhB,uBAxC1E,2CA6CR,CAACT,KACH+F,qBAAU,cACP,CAACqM,IAcJrM,qBAAU,WACHuN,IACCe,YAAW,WACPd,IAAc,KACf,OAER,CAACD,KAEJ,IACAgB,GAAU,SAAA5M,GAEN,GADAA,EAAI6M,iBACCvB,EAAQwB,QAAQ,MAAO,IAAIhJ,OAEzB,CACH1L,QAAQC,IAAI,8BACZ,IACAM,EAAOiK,EAASqB,GAChBrL,EAASgK,EAASiF,aAClB/O,EAAWkO,EAAaa,aACxBhP,EAASmO,EAAa/C,GAEtBjK,EAAmBrB,EAAMG,EAAUD,EAAQyS,GAC3CvQ,EAAsBlC,EAAQD,EAAQD,EAAM2S,GAC5CC,EAAW,SAXXnT,QAAQC,IAAI,sEA+EpB,OACI,qCACA,sBAAKwH,UAAWlC,EAAQsM,QAAxB,UACI,qBAAKpK,UAAWlC,EAAQuM,UAAxB,SACA,cAAC,EAAD,CACA9C,cAAeA,GACf1E,eAAiB,MAGjB,qBAAK7C,UAAWlC,EAAQ6L,YAAxB,SACA,cAAC,GAAD,CAAYxC,aAAcA,EAAcI,cAAeA,OAEvD,sBAAKvH,UAAWlC,EAAQ6M,QAASrG,MAAOwH,EAAxC,UACI,sBAAK9L,UAAWlC,EAAQwM,WAAxB,UACI,gCACA,sBAAM9J,QAAS,kBAAKwL,IAAc,IAAlC,mCACA,cAACkB,GAAA,EAAD,CAAQrR,MAAM,UAAU2E,QAAS,kBApD7B,SAAC2M,GAIjB,IAAIhU,EAHEqS,IAAN2B,GAEAtB,EAAiBsB,GAGbhU,EADDgU,EACcpK,EAASiF,aAET,KAGjBrP,EAAiB,CACbG,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvB9O,cAAciU,EACdhU,WAAYA,IAmCkCiU,EAAmBlU,IAAgBmU,QAASnU,OAEhFA,EACE,cAAC,KAAD,CACAsH,QAAW,kBAAKoL,GAAepB,IAC/BxK,UAAalC,EAAQyM,UACrBlO,SAAS,UACX,QAGN,sBAAK2D,UAAWlC,EAAQ+M,UAAxB,UACI,qBAAKyC,IAAKrB,KA5FZ,WACV,IAAcsB,EAAWC,EAArBrB,EAAM,GAAqBsB,EAAM,GAAIC,EAAO,GAChD,GAAG7C,EAwBC,OAvBAA,EAAU1L,KAAI,SAAA/E,GACPA,EAAIK,YACH+S,EAAO,IAAIG,KAA6B,IAAxBvT,EAAIK,UAAUmT,SAC9BH,EAAMD,EAAKK,WACXH,EAAOF,EAAKM,cAEhBP,EAAS,UAAME,EAAN,cAAeC,GACR,OAAbtT,EAAII,KACH2R,EAAIxL,KACA,sBAAkBX,UAAWlC,EAAQgN,MAArC,UACI,+BAAO1Q,EAAIA,MACX,sBAAM4F,UAAWlC,EAAQmN,KAAzB,SAAgCsC,MAF1BnT,EAAIgK,KAMlB+H,EAAIxL,KACA,sBAAkBX,UAAWlC,EAAQkN,QAArC,UACI,+BAAO5Q,EAAIA,MACX,sBAAM4F,UAAWlC,EAAQmN,KAAzB,SAAgCsC,MAF1BnT,EAAIgK,QAOlB+H,EAmEC4B,MAEL,uBACA/N,UAAWlC,EAAQoN,WACnB8C,SAAU,SAAC7N,GAAD,OAAQ4M,GAAQ5M,IAF1B,UAII,uBACAH,UAAWlC,EAAQqN,QACnBlL,YAAY,uBACZC,SAAU,SAACC,GAAD,OAAQuL,EAAWvL,EAAIC,OAAOC,QACxCA,MAAOoL,IAGP,sBAAMzL,UAAWlC,EAAQsN,SAAzB,SACA,cAAC,KAAD,CACA5K,QAAS,SAACL,GAAD,OAAQ4M,GAAQ5M,cAMjC,8BACEoL,EAAc,cAAC,GAAD,IAAkB,UAGtC,cAACzG,EAAA,EAAD,CACIC,OAAQ,MACRC,KAAMwF,EACNvF,QAAS,kBAAK2G,GAAc,IAHhC,SAIQ,sBAAK5L,UAAWlC,EAAQ0M,WAAxB,UACI,qBAAKxK,UAAWlC,EAAQ2M,gBAAxB,yBACA,cAAC,EAAD,CACA5H,eAAe,EACfC,gBAAiB,kBAAK8I,GAAc,IACpC1S,cAAeA,IAEf,qBACAoL,MAAO,CAACjI,SAAU,SAAUN,UAAW,SAAUkB,QAAS,OAD1D,uDAMZ,eAACgR,GAAA,EAAD,CACIjJ,KAAM+G,GACN9G,QAAS,kBAAK+G,IAAc,IAC5B,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACkC,GAAA,EAAD,CAAa9J,GAAG,qBAAhB,SACK+C,EAAY,UACVA,EAAaa,aADH,oCAEX,OAGN,eAACmG,GAAA,EAAD,WACA,wBAAQ3N,QAAS,kBAAKwL,IAAc,IAApC,kBACA,wBAAQxL,QAAS,kBA/FvBwL,IAAc,QACdrT,EAAiB,CACfG,KAAMiK,EAASqB,GACfrL,OAAQgK,EAASiF,aACjBhP,OAAQmO,EAAa/C,GACrBnL,SAAUkO,EAAaa,aACvB9O,eAAc,EACdC,WAAY,QAwF+BmH,WAAS,EAAhD,kCE1RG8N,GAhEQhT,aAAW,SAAAC,GAAK,MAAI,CACvCgT,SAAW,CACP9S,MAAO,QACPmH,WAAY,oCACZ9G,gBAAiB,UACjBmB,OAAQ,OACRlB,MAAO,QACPQ,SAAU,QAEdiS,aAAa,CACT7S,QAAS,OAAQE,WAAY,SAC7BM,OAAQ,WACR,QAAS,CACLV,MAAO,OACPwB,OAAQ,SAGhBwR,GAAG,CACCxR,OAAQ,OACRT,aAAc,OAElBkS,aAAa,CACTlR,WAAY,OAEhB,4CAA6C,CACzC+Q,SAAS,CACLxM,SAAU,QAEd4M,YAAY,CACRhT,QAAS,QAEb6S,aAAa,CACT5R,OAAO,UACP,UAAU,CACNb,MAAO,aAInB6S,WAAW,CAGP,4CAA6C,CACzC,mDAAmD,CAC/CrN,KAAM,QAEV,mBAAmB,CACfM,UAAW,qBAEfE,SAAU,OACVE,UAAW,OACX,QAAS,CACLF,SAAU,OACVE,UAAW,cDhCpBsJ,GAAehT,EAAOC,kBACzBC,QAAQC,IAAI,uBAGhB,IENI6S,GFqHWsD,GA/GE,SAAC9Q,GAEd,IAAMC,EAAUsQ,KAGR9G,EAA6BzJ,EAA7ByJ,qBAAsB7O,EAAOoF,EAAPpF,GAG9B,EAC0BwF,qBAAWhG,GADrC,mBACC8K,EADD,aAEoC9E,qBAAW7F,IAF/C,mBAEgBwW,GAFhB,WAKA,EAC4BzQ,mBAAS,MADrC,mBACE0Q,EADF,KACYC,EADZ,OAEkC3Q,oBAAS,GAF3C,mBAEE4Q,EAFF,KAEeC,EAFf,KAKAxQ,qBAAU,WAIN,OAFAyQ,IAEO,WACH1W,QAAQC,IAAI,iCACZsW,EAAY,SAEjB,IAGH,IACAG,EAAa,WACTlQ,IAAMmQ,IAAN,UAAa7D,GAAb,oBAA4CtQ,MAAK,SAAAiE,GAC7C8P,EAAY9P,EAAIpG,SAEnBkH,OAAM,SAAAC,GAAG,OAAGxH,QAAQ4W,MAAMpP,OAM/BqP,EAAe,WACXR,OAAgBnQ,GAChBuQ,GAAe,IAwCnB,OACI,sBAAKhP,UAAWlC,EAAQuQ,SAAxB,UACI,qBAAKrO,UAAWlC,EAAQ2Q,YAAxB,SACI,cAAC,EAAD,CACAnH,qBAAsBA,EACtBD,iBAAmB,MAGvB,gDACEwH,EA/CQ,WACd,IAAIpO,EAAQ,GAkCZ,OAjCGoO,GACCA,EAAS1P,KAAI,SAAAkQ,GACT,IAAId,EAEAA,EADDc,EAAK/P,OAAO,GAEX,qBACAsB,IAAKyO,EAAK/P,OAAO,GAAGT,IACpBmB,UAAWlC,EAAQyQ,KAGd,cAAC,IAAD,CACLlS,SAAS,QACT2D,UAAWlC,EAAQyQ,KAGpBc,EAAKjL,KAAOrB,EAASqB,IACpB3D,EAAME,KACF,sBACAH,QAAS,kBA5Bf,SAAC6O,GACXL,GAAe,GACfJ,EAAgBS,GA0BcC,CAAYD,IAE1BrP,UAAWlC,EAAQwQ,aAHnB,UAKKC,EACD,sBACAvO,UAAWlC,EAAQ0Q,aADnB,SAGKa,EAAKrH,iBAPTqH,EAAKjL,QAcnB3D,EAaC8O,GAEA,cAAC,EAAD,CAAahO,YAAY,6BAE7B,cAACuD,EAAA,EAAD,CACIC,OAAQ,QACRC,KAAM+J,EACN9J,QAAS,kBAAKmK,KACdpP,UAAWlC,EAAQ4Q,WAJvB,SAMQ,cAAC,GAAD,CACInH,cAAiB,kBAAK6H,KACtB3W,GAAMA,U,qBG9Df+W,GAjEOpU,aAAW,SAAAC,GAAK,MAAI,CACtC,4CAA6C,CACzCoU,MAAM,CACFlU,MAAO,OACP,QAAS,CACLsG,SAAU,OAEVvF,aAAc,QAElBd,QAAS,MACTuG,UAAW,OACXtG,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ4B,eAAgB,iBAEpBmS,oBAAoB,CAChBjU,QAAS,SAGjBkU,iBAAiB,CACblU,QAAS,OAAQE,WAAY,SAAUD,cAAe,SACtD,SAAU,CACNqG,UAAW,SAGnB6N,eAAe,CACXtT,aAAc,MAElBuT,UAAU,CACN9T,UAAW,SACXM,SAAU,SACVR,MAAO,UACPiU,aAAc,QAElB,4CAA6C,CAEzCL,MAAM,CACFvT,SAAU,WACVuK,OAAQ,IACRnB,OAAQ,OACR1J,gBAAiB,WAErB+T,iBAAiB,CACblU,QAAS,QAEboU,UAAU,CACNpU,QAAS,QAEbsU,iBAAiB,CACbxU,MAAO,QACPwB,OAAQ,MAERtB,QAAS,OACT8B,eAAgB,eAChB5B,WAAY,UAEhB+T,oBAAoB,CAChB7N,SAAU,MACVD,UAAW,MACXtF,aAAc,YC/DX,OAA0B,yCC0G1B0T,I,cA9FC,WAEZ,IAAMlS,EAAU0R,KAEhB,EACsCrR,qBADtC,mBACC8R,EADD,KACiBC,EADjB,OAE4B/R,oBAAS,GAFrC,mBAKA,GALA,UAM0BF,qBAAWhG,IADrC,mBACC8K,EADD,aAEwC9E,qBAAW9F,IAFnD,mBAEC4Q,EAFD,UAIAvK,qBAAU,WACHuK,GAAmBA,EAAgBnQ,MAClCsX,EAAkBnH,EAAgBnQ,KAAKuX,eAE5C,CAACpH,IAsCJ,OACA,sBAAK/I,UAAWlC,EAAQ2R,MAAxB,UAES1G,EAAgBhP,IAtBN,WACf,IAAIqW,EACJ,GAAGrH,EAEC,OADGA,GAAmBA,EAAgBnQ,MAAQmQ,EAAgBnQ,KAAKyG,QAAO+Q,EAASrH,EAAgBnQ,KAAKyG,MAAMC,OAAO,GAAGT,KAEpH,sBAAKmB,UAAWlC,EAAQ6R,iBAAxB,UACI,qBACI/O,IAAKwP,EACLpQ,UAAWlC,EAAQ8R,iBAEvB,+BACK7G,EAAgB/O,eAiB7BqW,GALA,sBAAKrQ,UAAWlC,EAAQ6R,iBAAxB,UACI,qBAAK/O,IAAK0P,GAAatQ,UAAWlC,EAAQ8R,iBAC1C,6DAKR,sBAAK5P,UAAWlC,EAAQiS,iBAAxB,UACMhH,GAAmBA,EAAgBnQ,MAAQmQ,EAAgBnQ,KAAKyG,MAClE,qBACIuB,IAAKmI,EAAgBnQ,KAAKyG,MAAMC,OAAO,GAAGT,IAC1CmB,UAAWlC,EAAQ4R,sBAEtB,KACD,cAAC,KAAD,CAAkB9O,IAAKqP,EAAgBM,UAAQ,EAACC,UAAQ,OAGxDzH,EAAgBhP,MAAQkW,EAAiB,mBAAGjQ,UAAWlC,EAAQ+R,UAAtB,oCAA8D,KAQlF,SAArB9M,EAAS0N,QACT,qBAAKzQ,UAAWlC,EAAQ+R,UAAxB,8FAGE,UC/CCa,GAjDOtV,aAAW,SAAAC,GAAK,MAAI,CACtCsV,YAAa,CACT5T,OAAQ,QACRlB,MAAO,QACPJ,QAAS,OACTC,cAAe,UAEnB+J,MAAO,CACH5J,MAAO,UACPQ,SAAU,UAEdqJ,OAAQ,CACJ7J,MAAO,QACPQ,SAAU,UAEd,iBAAkB,CACd,KAAM,GACN,OAAQ,IAIZuU,YAAY,CACRnT,KAAM,IACN,4CAA6C,CACzChC,QAAS,OACT8B,eAAgB,iBAEpB,4CAA6C,CACzCrB,SAAU,aAGlB2U,MAAM,CACFhP,SAAU,OACV,4CAA6C,CACzCpG,QAAS,oBAGjBqV,WAAW,CACPjV,MAAO,UACPQ,SAAU,SAEd0U,eAAgB,CACZhU,OAAQ,OACR,4CAA6C,CACzCtB,QAAS,aJzBf4P,GAAehT,EAAOC,kBAE5B,IKbI0Y,GAAUC,GL8GCC,GAjGK,SAACrT,GAEjB,IAAMC,EAAU4S,KAIhB,EACkCzS,qBAAWlG,GAD7C,mBACCmG,EADD,KACegJ,EADf,OAE0BjJ,qBAAWhG,GAFrC,mBAEC8K,EAFD,KAEWoO,EAFX,OAGkClT,qBAAW/F,GAH7C,gCAIwC+F,qBAAW9F,IAJnD,mBAOQM,GAPR,UAOeoF,EAAPpF,IAGR,EACoC0F,oBAAS,GAD7C,mBACEiT,EADF,KACgBC,EADhB,KAKA7S,qBAAU,WACN8S,MACD,IAEH9S,qBAAU,WACHuE,IACCxK,QAAQC,IAAI,yBACZuG,IAAMwS,KAAN,UAAclG,GAAd,uBAAiDtI,GAChDhI,MAAK,SAAAiE,GAAG,OAAGzG,QAAQC,IAAIwG,EAAIpG,SAC3BkH,OAAM,SAAAC,GAAG,OAAGxH,QAAQC,IAAIuH,SAE9B,CAACgD,IAGJ,IACAuO,EAAgB,WACZ,IAAM3S,EAAO,CACTC,OAAQ,MACRC,IAAK,gCACLC,QAAS,CACL,eAAiB,mBACjB,OAAU,mBACV,+BAA4BZ,KAGpCa,IAAMJ,GAAQ5D,MAAK,SAACiE,GAEhBmS,EAAYnS,EAAIpG,SAEnBkH,OAAM,SAAAC,GACHxH,QAAQC,IAAIuH,GACZxH,QAAQC,IAAI0F,GACZgJ,EAAgB,MAChBvD,OAAOC,aAAauE,YAI5Bb,EAAuB,kBAAK+J,GAAiBD,IAQ7C,OACI,sBAAKpR,UAAWlC,EAAQ6S,YAAxB,UACI,cAAC,EAAD,CAAY5N,SAAUA,EAAUuE,qBAAsBA,IACtD,cAACxC,EAAA,EAAD,CACIC,OAAQ,QACRC,KAAMoM,EACNnM,QAAS,kBAAKoM,GAAgB,IAC9BrR,UAAalC,EAAQiT,eAJzB,SAMQ,cAAC,GAAD,CAAUtY,GAAIA,EACd6O,qBAAsBA,MAI9BvE,EACA,sBAAK/C,UAAWlC,EAAQ8S,YAAxB,UACI,qBAAK5Q,UAAWlC,EAAQ0T,MAAxB,SACI,cAAC,EAAD,CAAUzO,SAAUA,MAGxB,cAAC,GAAD,IACA,qBAAK/C,UAAWlC,EAAQ+S,MAAxB,SACI,cAAC,GAAD,CAAUpY,GAAIA,SAGpB,SMhDCgZ,GAjEC,SAACC,GACb,IAIIT,EAAa5F,EAJjB,EACgClN,qBADhC,mBACCwT,EADD,KACcC,EADd,OAEkCzT,qBAFlC,mBAEe0T,GAFf,aAG4B1T,qBAH5B,mBAGY2T,GAHZ,WA6DA,OAnDIb,EAAc5Y,EAAO0Z,eACrB1G,EAAehT,EAAOC,kBAI1BkG,qBAAU,WACNO,IAAMwS,KAAN,UAAclG,EAAd,kBAA4C,CACxCzS,KAAK,CACD8Y,OACAT,YAAcA,KAEnBlW,MAAK,SAAAiE,GACJzG,QAAQC,IAAIwG,EAAIpG,MAChBgZ,EAAe5S,EAAIpG,KAAK+Y,aACxBE,EAAgB7S,EAAIpG,KAAKoZ,cACzBF,EAAa9S,EAAIpG,KAAKqZ,WAGtBtO,OAAOC,aAAaC,QAAQ,eAAgB7E,EAAIpG,KAAK+Y,aACrDhO,OAAOC,aAAaC,QAAQ,sBAAuB7E,EAAIpG,KAAKoZ,cAC5DrO,OAAOC,aAAaC,QAAQ,mBAAoB7E,EAAIpG,KAAKqZ,WACzDtO,OAAOuO,QAAQC,UAAU,GAAI,KAAM,QACpCrS,OAAM,SAAAC,GACLxH,QAAQC,IAAI,WACZD,QAAQC,IAAIuH,GACZxH,QAAQC,IAAIkZ,GACZnZ,QAAQC,IAAI,gBAEjB,CAACkZ,IAuBGC,GCQIS,GAtEKhX,aAAW,SAAAC,GAAK,MAAI,CACpCgX,aAAc,CACV5W,QAAS,OACTC,cAAe,SACfqB,OAAQ,SAEZuV,YAAa,CAETjW,SAAU,QACV4E,cAAe,aACfC,kBAAmB,SACnBC,wBAAyB,WACzBC,wBAAyB,cACzBvF,MAAO,SAEX,uBAAwB,CACpB,KAAM,CAAEA,MAAO,SACf,MAAO,CAAEA,MAAO,WAEhB,OAAQ,CAAEA,MAAO,YAErB0W,SAAU,CACN9W,QAAS,OACTE,WAAY,UACZD,cAAe,SACf6B,eAAgB,SAChBE,KAAM,IACN1B,UAAW,SACXG,SAAU,YAEdsW,UAAW,CACP3W,MAAO,SAEX4W,YAAa,GAEbC,UAAW,CACP7W,MAAO,UACPgB,OAAQ,oBACRrB,QAAS,YACTc,aAAc,OACd,UAAW,CACPV,gBAAiB,UACjBC,MAAO,UAGf0F,YAAa,CACT1F,MAAO,QACPE,UAAW,SAEXgG,UAAW,OACX+N,aAAc,OACdzT,SAAU,UAGdsW,gBAAiB,CACb1R,cAAe,cACfC,kBAAmB,SACnBhF,SAAU,WACVU,IAAK,IACLyE,KAAM,IACNtF,UAAW,SACXR,MAAO,OAEX,wBAAyB,CACrB,KAAM,CAAE0B,QAAS,GACjB,OAAQ,CAAEA,QAAS,QFOZ2V,GA5DM,WAEjB,IAAM9U,EAAUsU,KAGhBpB,GAAW3Y,EAAOwa,gBAEmB5B,GAAc5Y,EAAO0Z,eAE1D,IAEIJ,EAFEmB,EAAO,2DAAuD9B,GAAvD,4CAAmGC,GAAnG,gYACPS,EAAO,IAAIqB,gBAAgBpP,OAAOqP,SAASC,QAAQ/D,IAAI,QAI7D,EACkCjR,qBAAWlG,GAD7C,mBACemP,GADf,WAGA,EAAgC/I,oBAAS,GAAzC,mBAAQ+U,EAAR,KAAiBC,EAAjB,KAYA,OATGzB,IAAMC,EAAaF,GAAQC,IAC3BC,GACCzK,EAAgByK,GAChBpZ,QAAQC,IAAImZ,IAEZpZ,QAAQC,IAAI,mBAKZ,sBAAKwH,UAAWlC,EAAQuU,aAAxB,UACI,cAAC,EAAD,CAAYjL,WAAW,IACvB,qBAAKpH,UAAWlC,EAAQyU,SAAxB,SAECb,EAmBG,cAAC,EAAD,CAAanQ,YAAY,qBAlB7B,qCACA,qBAAKvB,UAAWlC,EAAQ2U,YAAajS,QAAS,kBAAK2S,GAAW,IAA9D,SACI,mBAAGC,KAAMN,EAAT,SACA,sBAAM9S,UAAWlC,EAAQ4U,UAAzB,oCAGJ,sBACA1S,UAAWlC,EAAQyD,YADnB,UAGK2R,EACG,mBAAGlT,UAAWlC,EAAQ6U,gBAAtB,SACA,cAAC,EAAD,CAAapR,YAAY,4CAE3B,KACF,+FGaD8R,GApDH,WAEV,MAC0BlV,qBAD1B,mBACC4E,EADD,KACWoO,EADX,OAEkChT,qBAFlC,mBAECmV,EAFD,KAEepM,EAFf,OAGwC/I,mBAAS,CAC/CpE,SAAK0E,EAAWzE,eAAWyE,EAAWvF,mBAAeuF,EAAW7F,UAAM6F,IAJxE,mBAGCsK,EAHD,KAGkB/F,EAHlB,OAMoC7E,oBAAS,GAN7C,mBAME6K,EANF,KAMgBC,EANhB,OAOkC9K,qBAPlC,mBAOCgJ,EAPD,KAOeyH,EAPf,OAQkCzQ,oBAAS,GAR3C,mBAQEoN,EARF,KAQeC,EARf,KAUM/S,EAAKC,YAAapB,GAYxB,OATAkH,qBAAU,WACLmF,OAAOC,aAAa2P,QAAQ,iBAC7BrM,EAAgBvD,OAAOC,aAAa2P,QAAQ,mBAE7C,IAMD,cAAC,IAAD,UACA,qBAAKvT,UAAU,MAAf,SACE,cAACjI,EAAoByb,SAArB,CAA8BnT,MAAO,CAACiT,EAAcpM,GAApD,SACA,cAACjP,EAAgBub,SAAjB,CAA0BnT,MAAO,CAAC0C,EAAUoO,GAA5C,SACA,cAAChZ,EAAuBqb,SAAxB,CAAiCnT,MAAO,CAAC0I,EAAiB/F,GAA1D,SACA,cAACxB,EAAoBgS,SAArB,CAA8BnT,MAAO,CAAE2I,EAAcC,GAArD,SACA,cAAC7Q,EAAoBob,SAArB,CAA8BnT,MAAO,CAAC8G,EAAcyH,GAApD,SACA,cAAC1W,EAAmBsb,SAApB,CAA6BnT,MAAO,CAAEkL,EAAaC,GAAnD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiI,OAAK,EAACC,KAAK,IAClBC,QAASL,EAAe,cAAC,GAAD,CAAa7a,GAAIA,IAAQ,cAAC,GAAD,MAEjD,cAAC,IAAD,CAAOgb,OAAK,EAACC,KAAK,SAClBC,QAASL,EAAe,cAAC,GAAD,CAAa7a,GAAIA,IAAQ,cAAC,GAAD,0BCnD5Cmb,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB/Y,MAAK,YAAkD,IAA/CgZ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF5M,SAAS6M,eAAe,SAM1BX,M","file":"static/js/main.cc8291b5.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAINVFV1RI91b9KJ15qKJQF3Piv1GbwF_s\",\n    authDomain: \"hyspotify-1.firebaseapp.com\",\n    projectId: \"hyspotify-1\",\n    storageBucket: \"hyspotify-1.appspot.com\",\n    messagingSenderId: \"97714255131\",\n    appId: \"1:97714255131:web:8f9b8de2325733e0048fbe\",\n    measurementId: \"G-QN47HC9Z9N\"\n  };\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default app;","import { createContext } from \"react\";\n\nexport const SpotifyTokenContext = createContext(null);","import { createContext } from \"react\";\n\nexport const UserDataContext = createContext(null);","import { createContext } from \"react\";\n\nexport const MiniPlayer2Context = createContext(null);","import { createContext } from \"react\";\n\nexport const SpotifyTrackUriContext = createContext(null);","import { createContext } from \"react\";\n\nexport const ChattingWithContext = createContext(null);","import axios from 'axios'\nimport Config from '../config.json';\nimport app from '../firebaseConfig'\nimport { getFirestore, doc, setDoc, updateDoc, onSnapshot, collection, query, orderBy, limit, addDoc, getDoc  } from 'firebase/firestore';\nimport admin from 'firebase-admin'\n\nlet backendRoute;\nif(process.env.NODE_ENV === \"development\"){\n    backendRoute = Config.localBackend\n    console.log('development MODE')\n}else {backendRoute = Config.productionBackend; \n    console.log('production MODE')\n}\n\nconst db = getFirestore(app)\n\n\nexport const isSharingSongAPI = async data => {\n    const { myID, myName, frndID, frndName, isSharingSong, songSharer } = data\n    const myChatRef = doc(db, \"users\", myID, \"chats\",`${frndName}-${frndID}`)\n    const frndChatRef = doc(db, \"users\", frndID, \"chats\",`${myName}-${myID}`)\n\n    const chatRefDocSnap1 = await getDoc(myChatRef)\n    const chatRefDocSnap2 = await getDoc(frndChatRef)\n    \n    if(chatRefDocSnap1.exists() && chatRefDocSnap2.exists()){\n        updateDoc(myChatRef, {\n            isSharingSong : isSharingSong,\n            songSharer: songSharer\n        })\n        updateDoc(frndChatRef, {\n            isSharingSong : isSharingSong,\n            songSharer: songSharer\n        })\n    }else{\n        setDoc(myChatRef, {\n            name: frndName,\n            isSharingSong : isSharingSong,\n            songSharer: songSharer\n        })\n        setDoc(frndChatRef, {\n            name: myName,\n            isSharingSong : isSharingSong,\n            songSharer: songSharer\n        })\n    }\n    \n}\n\nexport const playSharedSongAPI = async data=> {\n    const { myID, myName, frndID, frndName, uri, trackName } = data\n    const myChatRef = doc(db, \"users\", myID, \"chats\",`${frndName}-${frndID}`)\n    const frndChatRef = doc(db, \"users\", frndID, \"chats\",`${myName}-${myID}`)\n\n    const chatRefDocSnap1 = await getDoc(myChatRef)\n    const chatRefDocSnap2 = await getDoc(frndChatRef)\n    \n    if(chatRefDocSnap1.exists() && chatRefDocSnap2.exists()){\n        updateDoc(myChatRef, {\n            sharedUri: uri, \n            sharedTrackName: trackName\n        })\n        updateDoc(frndChatRef, {\n            sharedUri: uri, \n            sharedTrackName: trackName\n        })\n    }\n}\n\nexport const pauseSongAPI = (data)=> {\n    const { userData, chattingWith, playingTrack} = data;\n    axios.post(`${backendRoute}/chats/pauseSong`, {\n        myCred: userData,\n        frndCred: chattingWith,\n        playingTrack: playingTrack\n    })\n    .then(res=> console.log(res.data))\n    .catch(err=> console.error(err))\n}\n\nexport const addMsgToMyDatabase = async (myID, frndName, frndID, msg)=> {\n    let myChatRef = doc(db, \"users\", myID, \"chats\",`${frndName}-${frndID}`)\n    let msgRef = collection(myChatRef, \"messages\")\n\n    const chatRefDocSnap = await getDoc(myChatRef)\n    if(chatRefDocSnap.exists()){\n        console.log('existsssssssssss')\n        const addMsg = addDoc(msgRef, {\n            from: 'me',\n            msg: msg,\n            createdAt: admin.firestore.Timestamp.now().toDate()\n        }).then(()=> {\n            updateDoc(myChatRef, {\n                name: frndName,\n                lastMsgText: msg,\n                lastMsgTime: admin.firestore.Timestamp.now().toDate()\n            })\n        })\n    }else {\n        console.log('DO NOTTTTTTTTTTTTTTT')\n        const addMsg = addDoc(msgRef, {\n            from: 'me',\n            msg: msg,\n            createdAt: admin.firestore.Timestamp.now().toDate()\n        }).then(()=> {\n            setDoc(myChatRef, {\n                name: frndName,\n                lastMsgText: msg,\n                lastMsgTime: admin.firestore.Timestamp.now().toDate()\n            })\n        })\n    }\n    \n}\nexport const addMsgToFrndsDatabase = async(frndID, myName, myID, msg)=> {\n    let frndChatRef = doc(db, \"users\", frndID, \"chats\",`${myName}-${myID}`)\n    let msgRef = collection(frndChatRef, \"messages\")\n\n    const chatRefDocSnap = await getDoc(frndChatRef)\n    if(chatRefDocSnap.exists()){\n        const addMsg = addDoc(msgRef, {\n            from: myName,\n            msg: msg,\n            createdAt: admin.firestore.Timestamp.now().toDate()\n        }).then(()=> {\n            updateDoc(frndChatRef, {\n                name: myName,\n                lastMsgText: msg,\n                lastMsgTime: admin.firestore.Timestamp.now().toDate()\n            })\n        })\n    }else {\n        const addMsg = addDoc(msgRef, {\n            from: myName,\n            msg: msg,\n            createdAt: admin.firestore.Timestamp.now().toDate()\n        }).then(()=> {\n            setDoc(frndChatRef, {\n                name: myName,\n                lastMsgText: msg,\n                lastMsgTime: admin.firestore.Timestamp.now().toDate()\n            })\n        })\n    }\n}","\nimport { makeStyles } from '@mui/styles';\n\nconst SearchStyles = makeStyles(theme=> ({\n    searchComp: {\n        width: '100%',\n        padding: '8px 0px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: '#42ff75',\n        '@media only screen and (min-width: 768px)': { //desktop\n            backgroundColor: '#171821',\n            color: 'white',\n        },\n    },\n    searchCompHeader:{\n        textAlign: 'center',\n    },\n    searchBar:{\n        width: '95%',\n        display: 'flex', alignItems: 'center',\n        margin:'8px',\n        position: 'relative',\n    },\n    searchBox: {\n        flexGrow: '1',\n        padding : '12px 8px',\n        fontSize: '12px',\n        borderRadius: '10px',\n        outline: 'none',\n        borderStyle: 'none',\n        '&:focus': {\n            \n        }\n    },\n    closeSearchButton:{\n        // padding: '4px 8px',\n        cursor: 'pointer',\n        position: 'absolute',\n        right: '5px',\n        top: '5px',\n        border: '1px soild black',\n        '& svg':{\n            // fontSize: '2rem',\n            color: 'black'\n        },\n    },\n    searchResults: {\n        height: '50vh',\n        width: '95%',\n        overflow: 'auto',\n        '@media only screen and (min-width: 400px)': {//desktop\n            '&::-webkit-scrollbar': {\n                backgroundColor: 'inherit',\n                width: '4px',\n                opacity: '0.1',\n            },\n            '&::-webkit-scrollbar-thumb': {\n                backgroundColor: 'grey',\n                width: '4px',\n                cursor: 'pointer',\n                borderRadius: '2px'\n            },\n            '& :hover':{\n                color: '#42ff75',\n                cursor: 'pointer'\n            },\n        },\n    },\n    track: {\n        display: 'flex',\n        margin: '8px auto',\n        animation: '$risein 500ms'\n    },\n    '@keyframes risein': {\n        '0%': {\n            opacity: '0'\n        },\n        '100%': {\n            opacity: '1'\n        }\n    },\n    trackImg:{\n        borderRadius: '10px'\n    },\n    trackInfo:{\n        marginLeft: '8px',\n        display: 'flex', flexDirection: 'column',\n        justifyContent: 'center',\n        borderBottom: '1px solid #1DB954',\n        flex: '1',\n        fontSize: '12px'\n    },\n    trackTitle:{\n\n    },\n    trackArtist:{\n        fontSize: '12px',\n        opacity: '0.7'\n    },\n}))\n\nexport default SearchStyles","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios'\n\n//contexts\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\n\n//styles\nimport SearchStyles from './styles/searchStyles'\n\n//material ui\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst SearchComp = (props) => {\n    //styles\n    const classes = SearchStyles();\n\n    //props\n    const { closeSearchDrawer, playTrack } = props;\n    //contexts\n    const\n    [spotifyToken, setSpotifyToken] = useContext(SpotifyTokenContext);\n\n    //states\n    const\n    [searchText, setSearchText] = useState(''),\n    [searchResult, setSearchResult] = useState([]);\n\n    //life cycles\n    useEffect(()=> {\n        if(!searchText) return  setSearchText('');\n        setSearchResult(undefined)\n        let cancel = false;\n        const config={\n            method: 'get',\n            url: `https://api.spotify.com/v1/search?type=track&market=IN&q=${searchText}`,\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            if(cancel) return; //this will only send axios request when typing is pauses/stopped\n            console.log(res.data.tracks.items)\n            setSearchResult(\n                res.data.tracks.items.map(track=> {\n                    const smallestImg = track.album.images.reduce( //find the smallest image\n                        (smallest, img)=> {\n                            if(img.height < smallest.height) return img;\n                            return smallest;\n                        },\n                        track.album.images[0]\n                    )\n\n                    return{\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        uri: track.uri,\n                        albumUrl: smallestImg,\n                        data: track\n                    }\n                })\n            )\n            console.log(searchResult)\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n        // spotifyApi.searchTracks(searchText).then(res=> {\n        //     if(cancel) return;\n        // })\n        return ()=> cancel = true;\n    }, [searchText])\n\n    //functions\n    const\n    displayResults = ()=> {\n        let array = [];\n        if(searchResult){\n            console.log(searchResult)\n            searchResult.map(item=> {\n                array.push(\n                    <div \n                    className={classes.track} \n                    key={item.albumUrl.url}\n                    onClick={()=> {\n                        playTrack(item.uri, item.title, item.data)\n                        setSearchText('')\n                        closeSearchDrawer()\n                    }}>\n                        <span>\n                            <img \n                            src={item.albumUrl.url} \n                            className={classes.trackImg}\n                            />\n                        </span>\n                        <div className={classes.trackInfo}>\n                            <span className={classes.trackTitle}> {item.title} </span>\n                            <span className={classes.trackArtist}> {item.artist} </span>\n                        </div>\n                    </div>\n                )\n            })\n            return array\n        }\n    }\n\n\n    return (\n        <div className={classes.searchComp}>\n            <span className={classes.searchCompHeader}>Search Tracks </span>\n            <div className={classes.searchBar}>\n                <input \n                placeholder='Type Here'\n                onChange = {evt=> setSearchText(evt.target.value)}\n                className={classes.searchBox}\n                autoFocus\n                />\n                <div className={classes.closeSearchDiv}>\n                    <span \n                    onClick={()=> closeSearchDrawer()}\n                    className={classes.closeSearchButton}\n                    >\n                    <CloseIcon />\n                    </span>\n                </div>\n            </div>\n            <div className={classes.searchResults}>\n                {displayResults()}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchComp;","import { makeStyles } from '@mui/styles';\n\nconst LoadingCompStyles = makeStyles(theme=> ({\n    loadingComp: {\n        position: 'absolute',\n        width: '100vw',\n        top: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        color: 'white'\n    },\n    dot: {\n        display: 'block',\n        width: '1.5rem',\n        height: '1.5rem',\n        backgroundColor: 'white',\n        borderRadius: '50%',\n        margin: '1rem',\n        animationName: '$dotAnimation',\n        animationDuration: '1000ms',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'ease-in-out',\n        position: 'relative',\n    },\n    '@keyframes dotAnimation': {\n        '0%': { backgroundColor: '#42ff75', left: '-50px'},\n        '50%': { backgroundColor: '#1DB954', left: '50px'},\n        // '75%': { backgroundColor: '#42ff75', left: '10px'},\n        '100%': { backgroundColor: '#42ff75', left: '-50px'},\n    }, \n}))\n\nexport default LoadingCompStyles;","import React from 'react';\n//styles\nimport LoadingCompStyles from './loadingCompStyles';\n\nconst LoadingComp = (props) => {\n    //styles\n    const classes = LoadingCompStyles()\n    //props\n    const { description } = props;\n\n    return (\n        <div className={classes.loadingComp}>\n            <div className={classes.dot}></div>\n            <span>{description}</span>\n        </div>\n    );\n};\n\nexport default LoadingComp;","import { createContext } from \"react\";\n\nexport const PlayingTrackContext = createContext(null);","import { keyframes } from '@emotion/react';\nimport { makeStyles } from '@mui/styles';\n\nconst MusicBoxStyles = makeStyles(theme=> ({\n    musicBox: {\n        overflowY: 'scroll',\n        maxHeight: 'calc(100vh - 15vh)',\n        '@media only screen and (min-width: 768px)': { //desktop\n            fontSize: '12px',\n            maxWidth: '30vw'\n        },\n        '@media only screen and (max-width: 767px)': { //phones\n            fontSize: '14px'\n        },\n        '&::-webkit-scrollbar': {\n            width: '0.3rem',\n            backgroundColor: 'inherit',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            background: 'inherit',\n            cursor: 'pointer',\n            borderRadius: '2px',\n            opacity: '0',\n        },\n        '&::-webkit-scrollbar-thumb:hover': {\n            background: 'red',\n        },\n        '&:hover':{\n            '&::-webkit-scrollbar-thumb': {\n                background: 'grey',\n                cursor: 'pointer',\n                borderRadius: '2px',\n                opacity: '0',\n            },\n        },\n        '& .MuiAccordion-root':{\n            maxWidth: '95%',\n            height: '3rem',\n            borderRadius: '5px',\n            marginTop: '1rem',\n            padding: 0,\n        }\n    },\n    topTracksHeader:{\n        margin: '12px auto 4px 8px',\n        fontSize: '16px',\n        fontWeight: '600'\n    },\n    topTrackList: {\n        display: 'flex',\n        overflowX: 'scroll',\n        '&::-webkit-scrollbar': {\n            '@media only screen and (min-width: 400px)': { //desktop\n                backgroundColor: 'inherit',\n                height: '4px',\n                opacity: '0.1',\n            },\n            // '@media only screen and (max-width: 767px)': { //phones\n            //     height: '4px'\n            // },\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: 'grey',\n            height: '4px',\n            cursor: 'pointer',\n            borderRadius: '2px'\n        },\n    },\n    topTrack: {\n        display: 'flex',\n        flexDirection: 'column',\n        cursor: 'pointer',\n        marginTop: '4px',\n        marginLeft: '8px', \n        '&:hover':{\n            color: '#42ff75'\n        },\n    },\n    '@keyframes riseout': {\n        '0%': {\n            opacity: '0'\n        },\n        '100%': {\n            opacity: '1'\n        },\n    },\n    topTrackImg: {\n        height: '120px',\n        width: '120px',\n        borderRadius: '10px',\n        animation: '$riseout 500ms ease-in-out',\n        // margin: '8px 8px 0 auto',\n    },\n    topTrackInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    topTrackArtist:{\n        opacity: '0.6',\n        fontSize: '14px'\n    },\n    searchBar:{\n        // width: '100vw',\n        display: 'flex',\n        margin:'16px 8px 8px 8px',\n    },\n    searchBox: {\n        flexGrow: '1',\n        padding : '12px 8px',\n        backgroundColor: 'white',\n        fontSize: '12px',\n        borderRadius: '10px',\n        outline: 'none',\n        borderColor: 'inherit',\n        borderStyle: 'none',\n        color: '#5c5c5c',\n        display: 'flex', \n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    searchDrawer:{\n        fontFamily: 'Montserrat',\n        display: 'flex', flexDirection: 'column', alignItems: 'center',\n        '@media only screen and (min-width: 768px)': { //desktop\n            maxWidth: '30vw',\n            '& > *': { \n                maxWidth: '30vw',\n                marginTop: '115px',\n                height: '100%',\n            },\n            '& .MuiPaper-root':{\n                width: '30vw',\n                backgroundColor: '#171821',\n            }\n        },\n        '@media only screen and (mix-width: 767px)': { //below desktop\n            minWidth: '100vw',\n            '& > *': { \n                minWidth: '100vw',\n                marginTop: '115px',\n                height: '100%',\n            },\n        }\n    },\n    closeSearchDiv:{\n        display: 'flex', justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#42ff75'\n    },\n}))\n\nexport default MusicBoxStyles;","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n//server APIs\nimport { playSharedSongAPI } from '../api/serverRequests';\n//components\nimport SearchComp from './searchComp';\nimport LoadingComp from '../loadingComp';\n//contexts\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\nimport { SpotifyTrackUriContext } from '../contexts/spotifyTrackUriContext';\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { PlayingTrackContext } from '../contexts/playingTrackContext';\nimport { ChattingWithContext } from '../contexts/chattingWithContext';\n\n//material ui\nimport MusicBoxStyles from './styles/musicboxStyles'\nimport TextField from '@mui/material/TextField';\nimport Drawer from '@mui/material/Drawer';\nimport { Button } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nconst MusicBox = (props) => {\n    //styles\n    const classes = MusicBoxStyles();\n\n    //props\n    const { insideChatBox, closeSongDrawer, isSharingSong } = props;\n\n    //contexts\n    const\n    [spotifyToken, setSpotifyToken] = useContext(SpotifyTokenContext),\n    [userData, setUserData] = useContext(UserDataContext),\n    [ chattingWith, setChattingWith ] = useContext(ChattingWithContext),\n    [spotifyTrackUri, setSpotifyTrackUri] = useContext(SpotifyTrackUriContext),\n    [ playingTrack, setPlayingTrack ] = useContext(PlayingTrackContext);\n\n    //states\n    const\n    [ top50, setTop50 ] = useState(),\n    [ myTopTracks, setMyTopTracks ] = useState(),\n    [ newReleases, setNewReleases ] = useState(),\n    [ searchDrawer, setSearchDrawer ] = useState(false),\n    [ loadingTop50, setLoadingTop50 ] = useState(true),\n    [ loadingTopTracks, setLoadingTopTracks ] = useState(true),\n    [ searchBoxDiv, setSearchBoxDiv ] = useState(false);\n\n    //life cycle methods\n    useEffect(()=> {\n        fetchTop50();\n        fetchMyTopTracks();\n        fetchNewReleases();\n    }, [userData])\n\n    //functions\n    const\n    playTrack = (uri, trackName, data)=> {\n        // if(isSharingSong){\n        //     playSharedSongAPI({ \n        //         myID: userData.id, \n        //         myName: userData.display_name, \n        //         frndID: chattingWith.id, \n        //         frndName: chattingWith.display_name, \n        //         uri, \n        //         trackName \n        //     });\n        // }else{\n        // }\n        setSpotifyTrackUri({uri, trackName, isSharingSong, data});\n        window.localStorage.setItem('last played track', uri);\n        if(closeSongDrawer) closeSongDrawer()\n    },\n    fetchTop50 = ()=> {\n        const config={\n            method: 'get',\n            url: \"https://api.spotify.com/v1/playlists/37i9dQZEVXbLZ52XmnySJg?market=IN\",\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            setTop50(res.data.tracks.items);\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n    },\n    fetchMyTopTracks = ()=> {\n        const config={\n            method: 'get',\n            url: \"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=20\",\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            if(res.data.items) setMyTopTracks(res.data.items)\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n    },\n    fetchNewReleases = ()=> {\n        const config={\n            method: 'get',\n            url: \"https://api.spotify.com/v1/browse/new-releases?country=IN\",\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            console.log('new Releases')\n            setNewReleases(res.data.albums.items)\n            console.log('new Releases')\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n    },\n    fetchAlbumTracks = (id)=> {\n        const config={\n            method: 'get',\n            url: `https://api.spotify.com/v1/albums/${id}/tracks`,\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            console.log('new ALBUM')\n            console.log(res.data)\n            console.log('new ALBUM')\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n    },\n    displaymyTopTracks = ()=> {\n        let array = [];\n        if(myTopTracks){\n            let trackName;\n            myTopTracks.map(track=> {\n                let shortName = `${track.name} = ${track.name.length}`;\n                if(shortName.length > 25){\n                    //reduce the length of track name to save space\n                    trackName = shortName.substr(0,25).concat('...')\n                }else( trackName = track.name)\n                array.push(\n                    <div \n                    className={classes.topTrack} key={track.id}\n                    onClick={()=> playTrack(track.uri, track.name, track)}\n                    >\n                        <img \n                        src={track.album.images[1].url} \n                        key={track.id}\n                        className={classes.topTrackImg}\n                        />\n                        <div className={classes.topTrackInfo}>\n                            <span className={classes.topTrackName}> {trackName} </span>\n                            <span className={classes.topTrackArtist}> {track.artists[0].name} </span>\n                        </div>\n                    </div>\n                )\n            })\n        }\n        if(array.length === 0) array.push( \n            <p \n            style={{marginLeft: '8px'}}\n            className={classes.topTrackArtist}>Songs Frequently Heard By You Will Be Displyed Here</p>\n            )\n        return array;\n    },\n    displayTop50 = ()=> {\n        if(top50){\n            let array = [], trackName;\n            top50.map(item=> {\n                let shortName = `${item.track.name} = ${item.track.name.length}`;\n                if(shortName.length > 25){\n                    //reduce the length of track name to save space\n                    trackName = shortName.substr(0,25).concat('...')\n                }else( trackName = item.track.name)\n                array.push(\n                    <div \n                    className={classes.topTrack} key={item.track.id}\n                    onClick={()=> playTrack(item.track.uri, item.track.name, item.track)}\n                    >\n                        <img \n                        src={item.track.album.images[1].url} \n                        key={item.track.id}\n                        className={classes.topTrackImg}\n                        />\n                        <div className={classes.topTrackInfo}>\n                            <span className={classes.topTrackName}> {trackName} </span>\n                            <span className={classes.topTrackArtist}> {item.track.artists[0].name} </span>\n                        </div>\n                    </div>\n                )\n            })\n            return array;\n        }\n    },\n    displayNewReleases = ()=> {\n        if(newReleases){\n            let array = [], albumName;\n            newReleases.map(item=> {\n                let shortName = `${item.name} = ${item.name.length}`;\n                if(shortName.length > 25){\n                    //reduce the length of track name to save space\n                    albumName = shortName.substr(0,25).concat('...')\n                }else( albumName = item.name)\n                array.push(\n                    <div \n                    className={classes.topTrack} key={item.id}\n                    onClick={()=> fetchAlbumTracks(item.id)}\n                    >\n                        <img \n                        src={item.images[0].url} \n                        key={item.id}\n                        className={classes.topTrackImg}\n                        />\n                        <div className={classes.topTrackInfo}>\n                            <span className={classes.topTrackName}> {albumName} </span>\n                            <span className={classes.topTrackArtist}> {item.artists[0].name} </span>\n                        </div>\n                    </div>\n                )\n            })\n            return array;\n        }\n    },\n    closeSearchDrawer = ()=> {\n        setSearchDrawer(false)\n    },\n    displayMusicBox = ()=> {\n        const anchorType = drawerTypeFunc();\n    return(\n        <>\n            <div className={classes.searchBar}>\n                <span \n                className={classes.searchBox}\n                onClick={()=>setSearchDrawer(true)}\n                >\n                    Search Tracks...\n                    <SearchIcon />\n                </span>\n                <Drawer\n                    anchor={anchorType}\n                    open={searchDrawer}\n                    onClose={()=> closeSearchDrawer()}\n                    className={classes.searchDrawer}\n                >\n                    <SearchComp \n                    closeSearchDrawer={closeSearchDrawer}\n                    playTrack={playTrack}\n                    />\n                </Drawer>\n            </div>\n            <div className={classes.topTracksHeader}>Top 50 In India</div>\n            <div className={classes.topTrackList}>\n                {displayTop50()}\n            </div>\n            <div className={classes.topTracksHeader}>Frequently Played</div>\n            <div className={classes.topTrackList}>\n                {displaymyTopTracks()}\n            </div>\n            { !insideChatBox ?\n            <>\n            <div className={classes.topTracksHeader}>New Released Albums</div>\n            <div className={classes.topTrackList}>\n                {displayNewReleases()}\n            </div>\n            </>\n            : null\n            }\n        </>\n    )\n    },\n    drawerTypeFunc = ()=> {\n       if( window.screen.width > 767) return ('left')\n       else return ('top')\n    }\n\n    return (\n        <div className={classes.musicBox}>\n        {\n            displayMusicBox()\n        }\n        </div>\n    );\n};\n\nexport default MusicBox;\n\n/* \n\n            <div className={classes.searchBar}>\n                <span \n                className={classes.searchBox}\n                // onClick={()=>setSearchDrawer(true)}\n                onClick={()=> {\n                    window.screen.width > 500 ? setSearchBoxDiv(true) : setSearchDrawer(true)\n                }}\n                >\n                    Search Tracks...\n                    <SearchIcon />\n                </span>\n                <Drawer\n                    anchor={'top'}\n                    open={searchDrawer}\n                    onClose={()=> closeSearchDrawer()}\n                    className={classes.searchDrawer}\n                >\n                    <SearchComp \n                    closeSearchDrawer={closeSearchDrawer}\n                    playTrack={playTrack}\n                    />\n                    <div className={classes.closeSearchDiv}>\n                        <span \n                        onClick={()=> closeSearchDrawer()}\n                        className={classes.closeSearchButton}\n                        >\n                            CLOSE<CancelIcon />\n                        </span>\n                    </div>\n                </Drawer>\n            </div>\n*/","\nimport { makeStyles } from '@mui/styles';\n\nconst NavbarStyles = makeStyles(theme=> ({\n    spotifyNav:{\n        // backgroundColor: '#42ff75',\n        borderBottom: '1px solid #42ff75',\n        '@media only screen and (min-width: 768px)': { //desktop\n            // padding: '2rem 0rem',\n            height: '15vh !important',\n            // backgroundColor: 'red',\n            fontSize: '2.5rem',\n            margin: 'auto 1rem',\n            display: 'flex', alignItems: 'center',\n        },\n        '@media only screen and (max-width: 767px)': { //phones\n            padding: '1rem 0.2rem',\n            // backgroundColor: 'green',\n            fontSize: '2rem',\n        },\n        '&:hover': {\n            animation: '$nav 5000ms'\n        },\n    },\n    navbar: {\n        display: 'flex', alignItems: 'center',\n        justifyContent: 'space-between',\n        zIndex: '10',\n        flex: '1'\n    },\n    hy:{\n        color: 'white'\n    },\n    spotifyH1:{\n        color: '#42ff75',\n    },\n    abhay: {\n        color: '#42ff75',\n        fontSize: '0.6rem'\n    },\n    kamble: {\n        color: 'white',\n        fontSize: '0.6rem'\n    },\n    dp_chats: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    chatIcon: {\n        color: '#42ff75',\n        fontSize: '2rem',\n        marginRight: '1rem',\n        '@media only screen and (min-width: 768px)': { //desktop\n            display: 'none !important',\n        },\n    },\n    dpImg:{\n        height: '40px',\n        borderRadius: '50%',\n        '@media only screen and (min-width: 768px)': { //desktop\n            height: '50px',\n        },\n    },\n    spotifyTitle2:{\n        display: 'flex',\n        alignItems: 'flex-end'\n    },\n    frndDP:{\n        height: '3rem',\n        borderRadius: '50%',\n        '@media only screen and (min-width: 768px)': { //desktop\n            height: '50px',\n        },\n        '& svg': {\n            height: '48px',\n            width: '48px'\n        }\n    },\n    spotifyTitle_name:{\n        fontSize: '0.9rem',\n        marginLeft: '4px',\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hy2: {\n        fontSize: '0.6rem'\n    },\n    spotifyH12:{\n        fontSize: '0.6rem',\n        color: '#42ff75',\n    },\n    frndName:{\n        fontSize: '1.5rem',\n        color: 'white'\n    },\n    profileInfo: {\n        animationName: '$profileInfo',\n        animationDuration: '400ms',\n        animationName: '$profileInfo',\n        animationDirection: 'alternate',\n        // animationTimingFunction: 'ease-out',\n        backgroundColor: '#42ff75',\n        display: 'flex',\n        padding: '1rem 0.2rem',\n        zIndex: '1',\n    },\n    profileInfoBody: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginLeft: '0.5rem',\n        opacity: '0',\n        animation: '$pro 200ms 500ms forwards',\n        // animationDuration: '500ms',\n        // animationDelay: '1000ms'\n    },\n    profileName:{\n        fontSize: '3rem',\n    },\n    profileNameXS:{\n        fontSize: '2rem',\n    },\n    logoutDiv: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        justifyContent: 'flex-end',\n        flex: '1',\n        opacity: '0',\n        animation: '$pro 200ms 800ms forwards',\n        position: 'absolute',\n        bottom: '8px',\n        right: '8px'\n    },\n    logoutButt:{\n        display: 'flex', alignItems: 'center',\n        border: '1px solid white',\n        padding: '1px 2px',\n        fontSize: '0.7rem',\n        borderRadius: '10px',\n        '& > *': {\n            margin: 'auto 2px'\n        },\n        '&:hover': {\n            color: '#1DB954',\n            backgroundColor: 'white',\n        },\n        cursor: 'pointer'\n    },\n    profileInfoImg: {\n        height: '144px',\n        width: '144px',\n        borderRadius: '50%',\n        opacity: '0',\n        animation: '$pro 200ms 200ms forwards',\n        '& svg': {\n            width: '144px',\n            height: '144px'\n        }\n    },\n    //styles for inside chat list\n    chatListHead:{\n        '@media only screen and (min-width: 768px)': { //desktop\n            display: 'none !important'\n        },\n    },\n\n    '@keyframes profileInfo': {\n        '0%': {\n            transform: 'translateY(-100%)',\n            opacity: '0'\n        },\n        '35%': {\n            opacity: '0'\n        },\n        '100%': {\n            transform: 'translateY(0px)',\n            opacity: '1'\n        },\n    },\n    '@keyframes pro': {\n        '100%': {\n            opacity: '1',\n        },\n    },\n}))\n\nexport default NavbarStyles;","import React, { useState, useEffect, useContext } from 'react';\nimport Config from '../config.json';\nimport axios from 'axios';\n\n//context\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { ChattingWithContext } from '../contexts/chattingWithContext';\n//components\nimport MusicBox from './musicBox';\n//styles\n// import SpotifyStyles from './styles/spotifyStyles'\nimport NavbarStyles from './styles/navbarStyles'\nimport LogoutIcon from '@mui/icons-material/Logout';\n//material ui\nimport Drawer from '@mui/material/Drawer';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nlet backendRoute;\nif(process.env.NODE_ENV === \"development\"){\n    backendRoute = Config.localBackend\n    console.log('development MODE')\n}else {backendRoute = Config.productionBackend; \n    console.log('production MODE')\n}\n\nconst SpotifyNav = (props) => {\n    //styles\n    const classes = NavbarStyles();\n\n    //states\n    const\n    [dpImg, setDpImg] = useState(),\n    [songDrawer, setSongDrawer] = useState(false),\n    [profileDrawer, setProfileDrawer] = useState(false);\n\n    //contexts\n    const\n    [spotifyToken, setSpotifyToken] = useContext(SpotifyTokenContext),\n    [userData, setUserData] = useContext(UserDataContext),\n    [ chattingWith, setChattingWith ] = useContext(ChattingWithContext);\n\n    //props\n    const\n    { loggedOut, insideChatsList, toggleChatListDrawer, insideChatBox, toggleChatBox } = props;\n    \n    //lifecycle\n    useEffect(()=> {\n        if(userData && userData.images[0]){\n            setDpImg(<img \n                src={userData.images[0]} \n                className={classes.dpImg}\n                alt='dp'\n                onClick={()=> setProfileDrawer(true)}\n                />)\n        }else{\n            setDpImg(null)\n        }\n    }, [userData])\n\n    // functions\n    const\n    profileFunc = ()=> {\n        console.log(userData)\n    },\n    logout = ()=> {\n        setSpotifyToken(null);\n        window.localStorage.clear();\n    },\n    profileSummary = ()=> {\n        let arr = [];\n        let proDp, proName, logoutDiv = <></>;\n        if(chattingWith){\n            proName = chattingWith.display_name;\n            if(chattingWith.images[0]){\n                proDp = <img \n                src={chattingWith.images[0].url} \n                className={classes.profileInfoImg}\n                alt='dp'\n                />\n            }else proDp = <div  className={classes.profileInfoImg}>\n                <AccountCircleIcon />\n            </div>\n        }else{\n            proName = userData.display_name;\n            if(userData.images[0]){\n                proDp = <img \n                src={userData.images[0].url} \n                className={classes.profileInfoImg}\n                alt='dp'\n                />\n            }else proDp = <div  className={classes.profileInfoImg}>\n                    <AccountCircleIcon />\n                </div>\n\n            logoutDiv = <div className={classes.logoutDiv}>\n                            <div \n                            className={classes.logoutButt}\n                            onClick={()=> logout()}\n                            >\n                                <span>LOGOUT</span>\n                                <LogoutIcon />\n                            </div>\n                        </div>\n        }\n        \n        return (\n        <div className={classes.profileInfo}>\n            \n            { proDp }\n            <div className={classes.profileInfoBody}>\n                {\n                proName.length <= 9 ?\n                <span className={classes.profileName}>{proName}</span>\n                :\n                <span className={classes.profileNameXS}>{proName}</span>\n                }\n            </div>\n            { logoutDiv }\n        </div>)\n    }\n\n\n\n    return (\n        <>\n        <div className={classes.spotifyNav}>\n        <div className={classes.navbar}>\n            {\n            loggedOut ?\n                <div className={classes.spotifyTitle}>\n                    <span className={classes.hy}>hy</span>\n                    <span className={classes.spotifyH1}>SPOTIFY</span>\n                    <span className={classes.kamble}>{'<'}</span>\n                    <span className={classes.abhay}>{'abhay_kamble'}</span>\n                    <span className={classes.kamble}>{'/>'}</span>\n                </div>\n            : null\n            }\n            {//NAVBAR (ON MAIN LANDING PAGE)\n            !loggedOut && userData && !insideChatsList && !insideChatBox ?\n                <>\n                <div className={classes.spotifyTitle}>\n                    <span className={classes.hy}>hy</span>\n                    <span className={classes.spotifyH1}>SPOTIFY</span>\n                    {insideChatsList ? \n                    <span className={classes.hy}>Chats</span>\n                    : null\n                    }\n                </div>\n\n                <div className={classes.dp_chats}>\n                    <ForumIcon \n                    className={classes.chatIcon} \n                    fontSize='large'\n                    onClick= {()=> {\n                        toggleChatListDrawer()\n                        const fullScreenMode = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n                        if(!fullScreenMode) document.activeElement.requestFullscreen()\n                    }}\n                    />\n                    {dpImg ? \n                        <img \n                        src={userData.images[0].url} \n                        className={classes.dpImg}\n                        alt='dp'\n                        onClick={()=> setProfileDrawer(true)}\n                        />\n                    : \n                        <AccountCircleIcon \n                        fontSize='large'\n                        className={classes.dpImg}\n                        onClick={()=> setProfileDrawer(true)}\n                        />\n                    }\n                    \n                </div>\n                </>\n            : \n            null\n            }\n            {//NAVBAR (inside chat list)\n            insideChatsList ? \n                <>\n                <div className={classes.chatListHead}>\n                    <span className={classes.hy}>hy</span>\n                    <span className={classes.spotifyH1}>SPOTIFY</span>\n                    <span className={classes.hy}>Chats</span>\n                </div>\n                <CloseIcon \n                className={classes.chatIcon} \n                fontSize='large'\n                onClick= {()=> toggleChatListDrawer()}\n                />\n                </>\n            : null\n            }\n            {//NAVBAR (inside chat box)\n            insideChatBox && chattingWith ?\n                <>\n                <div className={classes.spotifyTitle2}>\n                    {chattingWith.images[0] ? \n                        <img \n                        src={chattingWith.images[0].url} \n                        className={classes.frndDP}\n                        alt='dp'\n                        onClick={()=> setProfileDrawer(true)}\n                        />\n                    : \n                        <div className={classes.frndDP}>\n                            <AccountCircleIcon \n                            fontSize='large'\n                            onClick={()=> setProfileDrawer(true)}\n                            />\n                        </div>\n                    }\n                    <div className={classes.spotifyTitle_name}>\n                    <div>\n                        <span className={classes.hy2}>hy</span>\n                        <span className={classes.spotifyH12}>SPOTIFY</span>\n                        <span className={classes.hy2}>Chats</span>\n                    </div>\n                    <span className={classes.frndName}>\n                        {chattingWith.display_name}\n                    </span>\n                    </div>\n                </div>\n                    <CloseIcon \n                    className={classes.chatIcon} \n                    fontSize='large'\n                    onClick= {()=> {\n                        toggleChatBox()\n                    }}\n                    />\n                </>\n            :\n            null\n            }\n        </div>\n        <Drawer\n            anchor={'top'}\n            open={profileDrawer}\n            onClose={()=> setProfileDrawer(false)}>\n                { !loggedOut && userData ? profileSummary() : null}\n        </Drawer>\n        </div>\n        {\n            // showProfile ?\n            // : null\n        }\n        </>\n    );\n};\n\nexport default SpotifyNav;\n\n\n\n/*\n            <div className={classes.displayPicture} onClick={()=> {\n                setShowProfile(!showProfile);\n            }}>\n                <img \n                src={userData.images[0].url} \n                className={classes.dpImg}\n                alt='dp'\n                />\n            </div>\n*/","import { keyframes } from '@emotion/react';\nimport { makeStyles } from '@mui/styles';\n\nconst MiniPlayerStyles = makeStyles(theme=> ({\n    miniPlayer: {\n        position: 'absolute',\n        bottom: '0',\n        width: '100vw',\n        '@media only screen and (min-width: 768px)': { //desktop\n            maxWidth: '30vw'\n        },\n    },\n    playNotificaton: {\n        position: 'absolute',\n        padding: '16px',\n        borderRadius: '50px',\n        backgroundColor: 'red',\n        top: '50vh',\n    },\n    playingSongName: {\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n    }\n}))\n\nexport default MiniPlayerStyles;","import React, { useEffect, useState, useContext } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback'\n\n//backend APIs\nimport { pauseSongAPI } from '../api/serverRequests'\n//context\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\nimport { SpotifyTrackUriContext } from '../contexts/spotifyTrackUriContext';\nimport { PlayingTrackContext } from '../contexts/playingTrackContext';\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { ChattingWithContext } from '../contexts/chattingWithContext';\n\n//styles\nimport MiniPlayerStyles from '../spotify/styles/miniPlayerStyles';\n\n//material ui\nimport { Snackbar, Paper } from '@mui/material';\nconst MiniPlayer2 = (props) => {\n    //styles\n    const classes = MiniPlayerStyles();\n    //states\n    const \n    [ displayNotification, setDisplayNotification ] = useState(false),\n    [trackNotificationOpen, setTrackNotificationOpen] = useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n      });\n\n    //variables\n    const { vertical, horizontal, open } = trackNotificationOpen;\n    const styless = {\n        // bgColor: 'blue'\n        activeColor: 'red'\n    }\n\n    //contexts\n    const\n    [userData, setUserData] = useContext(UserDataContext),\n    [ chattingWith, setChattingWith ] = useContext(ChattingWithContext),\n    [spotifyToken, setSpotifyToken] = useContext(SpotifyTokenContext),\n    [spotifyTrackUri, setSpotifyTrackUri] = useContext(SpotifyTrackUriContext),\n    [ playingTrack, setPlayingTrack ] = useContext(PlayingTrackContext);\n\n    //life cycle\n    useEffect(()=> {\n        if(spotifyTrackUri.uri){\n            handleTrackNotification()\n            setPlayingTrack(true)\n        }else{\n            setPlayingTrack(false)\n        }\n    }, [spotifyTrackUri])\n\n    useEffect(()=> {\n        setPlayingTrack(false)\n\n        return ()=> {\n            console.log(\"EXITING MINIPLAYERRRRRRR\")\n            setPlayingTrack(false)\n        }\n    }, [])\n    // useEffect(()=> {\n    //     if(chattingWith) pauseSongAPI({userData, chattingWith, playingTrack});\n    // }, [playingTrack])\n\n    //functions\n    const \n    closeTrackNotification = (event, reason) => {\n        setTrackNotificationOpen({ ...trackNotificationOpen, open: false });\n    },\n    handleTrackNotification = () => {\n        setTrackNotificationOpen({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n          });\n    },\n    currentTrack = (uri)=> {\n        return (\n            <SpotifyPlayer \n            // anchorOrigin={{ vertical, horizontal }}\n            token = {spotifyToken}\n            showSaveIcon\n            play={playingTrack}\n            callback={state=> {\n                console.log(state)\n                if(!state.isPlaying) setPlayingTrack(false)\n                if(state.isPlaying) setPlayingTrack(true)\n            }}\n            uris = {uri ? [uri] : []}\n            />\n        )\n    },\n    showSnackbar = (trackName)=> {\n        console.log(playingTrack)\n        return (\n        <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={3000}\n                onClose={closeTrackNotification}\n                key={vertical + horizontal}\n            >\n            <Paper elevation={10} className={classes.playNotificaton}>\n                Playing <span className={classes.playingSongName}>{trackName}</span>\n            </Paper>\n        </Snackbar>\n        )\n    }\n\n    return (\n        <div \n        className={classes.miniPlayer} \n        >\n            <SpotifyPlayer \n            // anchorOrigin={{ vertical, horizontal }}\n            token = {spotifyToken}\n            showSaveIcon\n            play={playingTrack}\n            callback={state=> {\n                console.log(state)\n                if(!state.isPlaying) setPlayingTrack(false)\n                if(state.isPlaying) setPlayingTrack(true)\n            }}\n            uris = {spotifyTrackUri.uri ? [spotifyTrackUri.uri] : []}\n            />\n            {/* {spotifyTrackUri.uri && playingTrack && chattingWith ? showSnackbar(spotifyTrackUri.trackName) : null} */}\n        </div>\n    );\n};\n\nexport default MiniPlayer2;","import { makeStyles } from '@mui/styles';\n\nconst ChatNavbarStyles = makeStyles(theme=> ({\n    navbarSmall: {\n        marginTop: '16px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    spotify:{\n        color: '#42ff75',\n    },\n    hySpotifyChats:{\n        fontSize: '0.6rem'\n    },\n    navBody: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '4px'\n    },\n    dp_name:{\n        display: 'flex',\n        alignItems: 'center',\n        '& svg':{\n            width: '2.5rem',\n            height: '2.5rem',\n        },\n    },\n    '@media only screen and (min-width: 768px)': { //desktop\n        close: {\n            '& :hover':{\n                color: '#42ff75',\n                cursor: 'pointer'\n            },\n        }\n    },\n    '@media only screen and (max-width: 767px)': { //mobile\n        navbarSmall: {\n            display: 'none !important'\n        }\n    }\n}))\n\nexport default ChatNavbarStyles;","import React from 'react';\n//styles\nimport ChatNavbarStyles from './styles/ChatNavbarStyles';\n//material ui\nimport CloseIcon from '@mui/icons-material/Close';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst ChatNavbar = (props) => {\n    //styles\n    const classes = ChatNavbarStyles();\n    //props\n    const { chattingWith, toggleChatBox } = props;\n    //functions\n    const \n    showDP = ()=> {\n        if(chattingWith){\n            if(chattingWith.images.length) return console.log(true)\n            return <AccountCircleIcon />\n        }\n    }\nreturn (\n    <div className={classes.navbarSmall}>\n        <div className={classes.hySpotifyChats}>\n            <span className={classes.hy}>hy</span>\n            <span className={classes.spotify}>SPOTIFY</span>\n            <span className={classes.hy}>Chats</span>\n        </div>\n        <div className={classes.navBody}>\n            <div className={classes.dp_name}>\n                {showDP()}\n                <div>{chattingWith ? chattingWith.display_name : null}</div>\n            </div>\n            <div \n            onClick={()=> toggleChatBox()} \n            className={classes.close}> \n                <CloseIcon/>\n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default ChatNavbar;","import { makeStyles } from '@mui/styles';\n\nconst ChatBoxStyles = makeStyles(theme=> ({\n    chatBox : {\n        width: '100vw',\n        fontFamily: 'Montserrat, Open Sans, sans-serif',\n        backgroundColor: '#171821',\n        height: '92vh',\n        color: 'white',\n        margin: '0px',\n        display: 'flex', \n        flexDirection: 'column',\n        '@media only screen and (min-width: 768px)': { //desktop\n            width: '30vw',\n            fontSize: '0.8rem !important',\n            maxHeight: 'calc(100% - 15vh)',\n        },'@media only screen and (mix-width: 767px)': { //mobile\n            \n        },\n    },\n    navbarBig: {\n        '@media only screen and (min-width: 768px)': { //desktop\n            display: 'none !important',\n        },\n    },\n    navbarSmall:{\n        '@media only screen and (mix-width: 767px)': { //mobile\n            display: 'none !important'\n        },\n    },\n    songSwitch: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#42ff75',\n        color: 'black',\n        // paddingLeft: '4px',\n        // paddingRight: '8px'\n    },\n    musicIcon:{\n        animationName: '$riseout',\n        animationDuration: '200ms',\n        animationTimingFunction: 'ease-in-out',\n        marginRight: '8px'\n    },\n    '@keyframes riseout': {\n        '0%': {\n            transform: 'scale(0.1, 0.1)'\n        },\n        '100%': {\n            transform: 'scale(1, 1)'\n        },\n    },\n    songDrawer:{\n        fontFamily: 'Montserrat',\n        borderBottom: '3px solid #42ff75',\n        backgroundColor: '#171821',\n        color: 'white',\n    },\n    songDrawerTitle:{\n        textAlign: 'center',\n        fontSize: '1.5rem',\n        marginTop: '8px',\n        color: '#42ff75'\n    },\n    listenTogetherIcons: {\n        display: 'flex', justifyContent: 'space-between', alignItems: 'center',\n    },\n    msgArea:{\n        flex: '1',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        overflow: 'auto',\n        boxSizing: 'border-box',\n        '& > *': { width: '100%',},\n        overflowX: 'hidden',\n    },\n    msgBucket:{\n        display:'flex',\n        flexDirection: 'column-reverse',\n        overflow: 'auto',\n        fontSize: '0.8rem',\n        borderRadius: '0px 0px 25px 25px',\n        '@media only screen and (min-width: 768px)': { //desktop\n            '&::-webkit-scrollbar': {\n                width: '0.3rem',\n                backgroundColor: 'inherit',\n            },\n            '&::-webkit-scrollbar-thumb': {\n                background: 'grey',\n                borderRadius: '2px',\n                opacity: '0',\n                '&:hover':{\n                    cursor: 'pointer',\n                },\n            },\n        },\n        fontSize: '12px'\n    },\n    myMsg: {\n        backgroundColor: 'white',\n        minWidth: '30%',\n        color: 'black',\n        maxWidth: '50%',\n        \"border-radius\": '10px 10px 0px 10px',\n        marginLeft: 'auto',\n        padding: '4px 8px',\n        margin: '4px 8px',\n        textAlign: 'left',\n        boxShadow: '5px 5px 5px 0px rgba(0,0,0,0.75)',\n        display: 'flex',\n        flexDirection: 'column',\n        animationName: '$transitionInChatBox',\n        animationDuration: '400ms',\n        '@media only screen and (min-width: 768px)': { //desktop\n            // '& span': { fontSize: '12px' },\n        },\n    },\n    frndMsg:{\n        backgroundColor: '#42ff75',\n        minWidth: '30%',\n        color: 'black',\n        maxWidth: '50%',\n        \"border-radius\": '0px 10px 10px 10px',\n        marginRight: 'auto',\n        padding: '4px 8px',\n        margin: '4px 8px',\n        textAlign: 'left',\n        boxShadow: '5px 5px 5px 0px rgba(0,0,0,0.75)',\n        display: 'flex',\n        flexDirection: 'column',\n        animationName: '$transitionInChatList',\n        animationDuration: '400ms',\n    },\n    time: {\n        textAlign: 'right',\n        fontSize: '10px',\n        fontStyle: 'italic',\n        opacity: '0.7',\n        '@media only screen and (min-width: 768px)': { //desktop\n            fontSize: '9px'\n        },\n        // borderTop: '0.5px solid white'\n    },\n    typingArea:{\n        width: '95vw',\n        display: 'flex', alignItems: 'center',\n        margin:'0px 8px 8px 8px',\n        borderRadius: '25px',\n        backgroundColor: 'white',\n        color: 'black',\n        '@media only screen and (min-width: 768px)': { //desktop\n            width: '99%',\n        },\n    },\n    textBox: {\n        flexGrow: '1',\n        padding : '12px 8px',\n        // backgroundColor: 'grey',\n        borderRadius: '25px',\n        fontSize: '12px',\n        outline: 'none',\n        borderStyle: 'none',\n        '&:focus': {\n            \n        }\n    },\n    sendButt: {\n        marginRight: '10px',\n        borderRadius: '50%',\n        '@media only screen and (min-width: 768px)': { //desktop\n            '& :hover':{\n                color: '#42ff75',\n                cursor: 'pointer'\n            },\n        },\n    }\n}))\n\nexport default ChatBoxStyles;","import React, { useContext, useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Config from '../config.json';\nimport { doc, onSnapshot, collection, query, orderBy, limit, where } from 'firebase/firestore';\n\n//backend APIs\nimport { addMsgToMyDatabase, addMsgToFrndsDatabase, isSharingSongAPI, playSharedSongAPI } from '../api/serverRequests';\n//components\nimport MusicBox from '../spotify/musicBox';\nimport SpotifyNav from '../spotify/spotifyNav';\nimport MiniPlayer2 from './miniPlayer2';\nimport ChatNavbar from './chatNavbar';\n//contexts\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { ChattingWithContext } from '../contexts/chattingWithContext';\nimport { PlayingTrackContext } from '../contexts/playingTrackContext';\nimport { SpotifyTrackUriContext } from '../contexts/spotifyTrackUriContext';\nimport { MiniPlayer2Context } from '../contexts/miniPlayer2Context';\n//styles\nimport ChatBoxStyles from './styles/chatBoxStyles';\n//material ui\nimport SendIcon from '@mui/icons-material/Send';\nimport Switch from '@mui/material/Switch';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport QueueMusicIcon from '@mui/icons-material/QueueMusic';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button'\n\nlet backendRoute;\nif(process.env.NODE_ENV === \"development\"){\n    backendRoute = Config.localBackend\n    console.log('development MODE')\n}else {backendRoute = Config.productionBackend; \n    console.log('production MODE')\n}\n\nconst ChatBox = (props) => {\n    //styles\n    const classes = ChatBoxStyles();\n\n    //contexts\n    const \n    [userData, setUserData] = useContext(UserDataContext),\n    [ chattingWith, setChattingWith ] = useContext(ChattingWithContext),\n    [spotifyTrackUri, setSpotifyTrackUri] = useContext(SpotifyTrackUriContext),\n    [ playingTrack, setPlayingTrack ] = useContext(PlayingTrackContext),\n    [ miniPlayer2, setMiniPlayer2 ] = useContext(MiniPlayer2Context);\n\n    //states\n    const\n    [ textMsg, setTextMsg ] = useState(''),\n    [ msgBucket, setMsgBucket ] = useState([]),\n    [ songDrawer, setSongDrawer ] = useState(false),\n    [ isSharingSong, setIsSharingSong ] = useState(false),\n    [ tempStyle, setTempStyle ] = useState({}),\n    [ dailogOpen, setDailogOpen ] = useState(false);\n    const dummy = useRef()\n    //props\n    const { toggleChatBox, db } = props;\n    //variables\n    const\n    tempStyle1 = {\n        paddingBottom : '6rem'\n    },\n    tempStyle2 = {\n        paddingBottom : '3rem'\n    };\n    //life cycle methods\n    useEffect(()=> {\n        isSharingSongAPI({ \n            myID: userData.id, \n            myName: userData.display_name, \n            frndID: chattingWith.id,\n            frndName: chattingWith.display_name, \n            isSharingSong:false, \n            songSharer: null\n        })\n        playSharedSongAPI({ \n            myID: userData.id, \n            myName: userData.display_name, \n            frndID: chattingWith.id,\n            frndName: chattingWith.display_name, \n            uri: null, \n            trackName: null \n        })\n\n        return ()=> {//return in useEffect[] executes when component is unmounted\n            console.log(\"UNMOUNTING CHATBOX\")\n            setIsSharingSong(false)\n            setMiniPlayer2(false)\n            isSharingSongAPI({ \n                myID: userData.id, \n                myName: userData.display_name, \n                frndID: chattingWith.id,\n                frndName: chattingWith.display_name, \n                isSharingSong:false, \n                songSharer: null\n            })\n            playSharedSongAPI({ \n                myID: userData.id, \n                myName: userData.display_name, \n                frndID: chattingWith.id,\n                frndName: chattingWith.display_name, \n                uri: null, \n                trackName: null \n            })\n        }\n    }, [])\n    useEffect(async ()=> {\n        const myID = userData.id,\n        frndName = chattingWith.display_name,\n        frndID = chattingWith.id;\n\n        if(db){\n            // console.log('fetching messages from db...');\n            let arr = [];\n            \n            const msgRef = query(collection(db, \"users\", myID, \"chats\", `${frndName}-${frndID}`, \"messages\"), orderBy(\"createdAt\", 'desc'), limit(50))\n            const sharingRef = query(\n                doc(db, \"users\", myID, \"chats\", `${frndName}-${frndID}`)\n                )\n\n            const getMsgs = onSnapshot(msgRef, snaps=> {\n                \n                arr = []\n                snaps.forEach(doc=> {\n                    arr.push({...doc.data(), id: doc.id})\n                })\n                setMsgBucket(arr)\n                if(dummy.current){\n                    dummy.current.scrollIntoView({behavior: 'smooth'})\n                }\n            })\n\n            const isSharingSongUpdate = onSnapshot(sharingRef, snaps=> {\n                console.log('updating isSharing...')\n                if(snaps.data()){\n                    const { sharedUri, sharedTrackName, songSharer } = snaps.data();\n                    if(songSharer === chattingWith.display_name && !sharedUri){\n                        // setDailogOpen(true)\n                        setIsSharingSong(true)\n                    }\n                    if(!snaps.data().isSharingSong){\n                        setIsSharingSong(false)\n                        setMiniPlayer2(false)\n                    }\n                    if(snaps.data().isSharingSong) setMiniPlayer2(true)\n                    if(snaps.data().isSharingSong && sharedUri){\n                        setSpotifyTrackUri({uri: sharedUri, trackName: sharedTrackName, isSharingSong});\n                    }\n                }\n            })\n        }\n    },[db])\n    useEffect(()=> {\n    }, [msgBucket])\n    // useEffect(()=> {\n    //     const myID = userData.id,\n    //     frndName = chattingWith.display_name,\n    //     frndID = chattingWith.id;\n    //     let songSharer\n    //     if(isSharingSong){\n    //         setTempStyle(tempStyle1)\n    //         songSharer = userData.display_name\n    //     }else{\n    //         setTempStyle({})\n    //         songSharer = null\n    //     }\n    // }, [isSharingSong])\n    useEffect(()=> {\n        if(dailogOpen){\n            setTimeout(() => {\n                setDailogOpen(false)\n            }, 5000);\n        }\n    }, [dailogOpen])\n    //functions\n    const\n    sendMsg = evt=> {\n        evt.preventDefault();\n        if (!textMsg.replace(/\\s/g, '').length) {\n            console.log('string only contains whitespace (ie. spaces, tabs or line breaks)');\n          }else{\n            console.log('sending msg to database...');\n            const\n            myID = userData.id,\n            myName = userData.display_name,\n            frndName = chattingWith.display_name,\n            frndID = chattingWith.id;\n\n            addMsgToMyDatabase(myID, frndName, frndID, textMsg)\n            addMsgToFrndsDatabase(frndID, myName, myID, textMsg)\n            setTextMsg('')\n        }\n    },\n    displayMsgs = ()=> {\n        let arr = [], timestamp, date, hrs = '', mins = '', class_name;\n        if(msgBucket){\n            msgBucket.map(msg=> {\n                if(msg.createdAt){\n                    date = new Date(msg.createdAt.seconds * 1000)\n                    hrs = date.getHours()\n                    mins = date.getMinutes()\n                }\n                timestamp = `${hrs} : ${mins}`;\n                if(msg.from === 'me'){\n                    arr.push(\n                        <div key={msg.id} className={classes.myMsg}>\n                            <span>{msg.msg}</span>\n                            <span className={classes.time}>{timestamp}</span>\n                        </div>\n                    )\n                }else{\n                    arr.push(\n                        <div key={msg.id} className={classes.frndMsg}>\n                            <span>{msg.msg}</span>\n                            <span className={classes.time}>{timestamp}</span>\n                        </div>\n                    )\n                }\n            })\n            return (arr);\n        }\n    },\n    isSharingSongFunc = (val)=> {\n        val ? setMiniPlayer2(true) : setMiniPlayer2(false)\n\n        setIsSharingSong(val)\n        let songSharer\n        if(val){\n            songSharer = userData.display_name\n        }else{\n            songSharer = null\n        }\n        // console.log('sending status to backend...');\n        isSharingSongAPI({ \n            myID: userData.id, \n            myName: userData.display_name, \n            frndID: chattingWith.id,\n            frndName: chattingWith.display_name, \n            isSharingSong:val, \n            songSharer: songSharer \n        })\n    },\n    dailogButton1 = () => {\n        \n      setDailogOpen(false);\n    },\n    dailogButton2 = () => {\n      setDailogOpen(false);\n      isSharingSongAPI({ \n        myID: userData.id, \n        myName: userData.display_name, \n        frndID: chattingWith.id,\n        frndName: chattingWith.display_name, \n        isSharingSong:false, \n        songSharer: null \n    })\n    };\n    \n    return (\n        <>\n        <div className={classes.chatBox}>\n            <div className={classes.navbarBig}>\n            <SpotifyNav \n            toggleChatBox={toggleChatBox} \n            insideChatBox = {true}\n            />\n            </div>\n            <div className={classes.navbarSmall}>\n            <ChatNavbar chattingWith={chattingWith} toggleChatBox={toggleChatBox}/>\n            </div>\n            <div className={classes.msgArea} style={tempStyle}>\n                <div className={classes.songSwitch}>\n                    <div>\n                    <span onClick={()=> setDailogOpen(true)}>Listen Songs Together</span>\n                    <Switch color=\"warning\" onClick={()=> isSharingSongFunc(!isSharingSong)} checked={isSharingSong}/>\n                    </div>\n                    { isSharingSong ? \n                        <QueueMusicIcon \n                        onClick = {()=> setSongDrawer(!songDrawer)}\n                        className = {classes.musicIcon}\n                        fontSize='large'/> \n                    : null}\n                    \n                </div>\n                <div className={classes.msgBucket}>\n                    <div ref={dummy}></div>\n                    {displayMsgs()}\n                </div>\n                <form \n                className={classes.typingArea}\n                onSubmit={(evt)=> sendMsg(evt)}\n                >\n                    <input \n                    className={classes.textBox}\n                    placeholder='Type Message Here...'\n                    onChange={(evt)=> setTextMsg(evt.target.value)}\n                    value={textMsg}\n                    >\n                    </input>\n                    <span className={classes.sendButt}>\n                    <SendIcon \n                    onClick={(evt)=> sendMsg(evt)}\n                    \n                    />\n                    </span>\n                </form>\n            </div>\n            <div>\n            { miniPlayer2 ? <MiniPlayer2 /> : null}\n            </div>\n        </div>\n        <Drawer\n            anchor={'top'}\n            open={songDrawer}\n            onClose={()=> setSongDrawer(false)}>\n                <div className={classes.songDrawer} >\n                    <div className={classes.songDrawerTitle}>SPOTIFY API</div>\n                    <MusicBox \n                    insideChatBox={true} \n                    closeSongDrawer={()=> setSongDrawer(false)}\n                    isSharingSong={isSharingSong}\n                    />\n                    <div \n                    style={{fontSize: '0.8rem', textAlign: 'center', opacity: '0.7'}}>\n                        Touch Anywhere Below To Close Drawer \n                    </div>\n                </div>\n        </Drawer>\n        <Dialog\n            open={dailogOpen}\n            onClose={()=> setDailogOpen(false)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {chattingWith ? \n                `${chattingWith.display_name} wants to play spotify with you.`\n                : null\n                }\n            </DialogTitle>\n            <DialogActions>\n            <button onClick={()=> setDailogOpen(false)}>Play</button>\n            <button onClick={()=> dailogButton2()} autoFocus>\n                Don't Play\n            </button>\n            </DialogActions>\n        </Dialog>\n        </>\n    );\n};\n\nexport default ChatBox;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport Config from '../config.json'\n//components\nimport SpotifyNav from '../spotify/spotifyNav';\nimport SearchComp from './searchUser'\nimport ChatBox from './chatBox';\nimport LoadingComp from '../loadingComp';\n//contexts\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { ChattingWithContext } from '../contexts/chattingWithContext';\n//styles\nimport ChatListStyles from './styles/chatListStyles';\n//material ui\nimport Drawer from '@mui/material/Drawer';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\n\nlet backendRoute;\nif(process.env.NODE_ENV === \"development\"){\n    backendRoute = Config.localBackend\n    console.log('development MODEEEEE')\n}else {backendRoute = Config.productionBackend; \n    console.log('production MODEEEEE')\n}\n\nconst ChatList = (props) => {\n    //styles\n    const classes = ChatListStyles();\n\n    //props\n    const { toggleChatListDrawer, db } = props\n\n    //contexts\n    const\n    [userData, setUserData] = useContext(UserDataContext),\n    [ chattingWith, setChattingWith ] = useContext(ChattingWithContext)\n\n    //states\n    const \n    [ allUsers, setAllUsers ] = useState(null),\n    [ chatBoxOpen, setChatBoxOpen ] = useState(false);\n\n    //life cycle methods\n    useEffect(()=> {\n        //get users\n        fetchUsers();\n\n        return ()=> {\n            console.log(\"unmounting chatlist component\")\n            setAllUsers(null)\n        }\n    }, [])\n\n    //functions\n    const\n    fetchUsers = ()=> {\n        axios.get(`${backendRoute}/chats/allUsers`).then(res=> {\n            setAllUsers(res.data)\n            })\n        .catch(err=> console.error(err))\n    },\n    openChatBox = (user)=> {\n        setChatBoxOpen(true);\n        setChattingWith(user);\n    },\n    closeChatBox = ()=> {\n        setChattingWith(undefined);\n        setChatBoxOpen(false);\n    },\n    displayAllUsers = ()=> {\n        let array = [];\n        if(allUsers){\n            allUsers.map(user=> {\n                let dp;\n                if(user.images[0]){\n                    dp = \n                    <img \n                    src={user.images[0].url}\n                    className={classes.dp} \n                    />\n                }else {\n                    dp = <AccountCircle \n                    fontSize='large'\n                    className={classes.dp} \n                    />\n                }\n                if(user.id !== userData.id){\n                    array.push(\n                        <div \n                        onClick={()=> openChatBox(user)} \n                        key={user.id}\n                        className={classes.chatListItem}\n                        >\n                            {dp}\n                            <span\n                            className={classes.chatListName}\n                            >\n                                {user.display_name}\n                            </span>\n                        </div>\n                    )\n                }\n            })\n        }\n        return array;\n    }\n\n    return (\n        <div className={classes.chatList}>\n            <div className={classes.chatListNav}>\n                <SpotifyNav \n                toggleChatListDrawer={toggleChatListDrawer} \n                insideChatsList = {true}\n                />\n            </div>\n            <p>HySpotify Users</p>\n            { allUsers ? \n                displayAllUsers() \n                : \n                <LoadingComp description=\"Fetching Hyspotify Users\"/> \n            }\n            <Drawer\n                anchor={'right'}\n                open={chatBoxOpen}\n                onClose={()=> closeChatBox()}\n                className={classes.chatDrawer}\n            >\n                    <ChatBox \n                        toggleChatBox = {()=> closeChatBox()}\n                        db = {db}\n                    />\n            </Drawer>\n        </div>\n    );\n};\n\nexport default ChatList;","import { makeStyles } from '@mui/styles';\n\nconst ChatListStyles = makeStyles(theme=> ({\n    chatList : {\n        width: '100vw',\n        fontFamily: 'Montserrat, Open Sans, sans-serif',\n        backgroundColor: '#171821',\n        height: '100%',\n        color: 'white',\n        fontSize: '12px',\n    },\n    chatListItem:{\n        display: 'flex', alignItems: 'center',\n        margin: '4px auto',\n        '& svg': {\n            width: '3rem',\n            height: '3rem'\n        },\n    },\n    dp:{\n        height: '3rem',\n        borderRadius: '50%',\n    },\n    chatListName:{\n        marginLeft: '8px',\n    },\n    '@media only screen and (min-width: 768px)': { //desktop\n        chatList:{\n            maxWidth: '100%'\n        },\n        chatListNav:{\n            display: 'none'\n        },\n        chatListItem:{\n            cursor:'pointer',\n            '&:hover':{\n                color: '#42ff75'\n            }\n        },\n    },\n    chatDrawer:{\n        // backgroundColor: 'red',\n        // display: 'none',\n        '@media only screen and (min-width: 767px)': { //desktop\n            '& .css-i9fmh8-MuiBackdrop-root-MuiModal-backdrop':{\n                left: 'auto'\n            },\n            '& .MuiPaper-root':{\n                overflowY: 'hidden !important',\n            },\n            maxWidth: '30vw',\n            marginTop: '15vh',\n            '& > *': { \n                maxWidth: '30vw',\n                marginTop: '16vh',\n                // height: '100%',\n            },\n            // '& .MuiPaper-root':{\n            //     width: '30vw',\n            //     border: '1px solid black',\n            //     backgroundColor: '#171821',\n            // }\n        },\n    },\n}))\n\nexport default ChatListStyles;","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Config from '../config.json'\n//contexts\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { MiniPlayer2Context } from '../contexts/miniPlayer2Context';\nimport { SpotifyTrackUriContext } from '../contexts/spotifyTrackUriContext';\n//components\nimport SpotifyNav from './spotifyNav';\nimport MusicBox from './musicBox';\nimport MiniPlayer from './miniPlayer';\nimport ChatList from '../chats/chatList';\nimport PlayBox from './playBox';\n//material ui\nimport Drawer from '@mui/material/Drawer';\n\n//styles\nimport SpotifyStyles from './styles/spotifyStyles'\n\nlet backendRoute;\nif(process.env.NODE_ENV === \"development\"){\n    backendRoute = Config.localBackend\n}else backendRoute = Config.productionBackend\n\nconst SpotifyRoot = (props) => {\n\n    const classes = SpotifyStyles();\n    let player;\n    \n    //contexts\n    const\n    [spotifyToken, setSpotifyToken] = useContext(SpotifyTokenContext),\n    [userData, setUserData] = useContext(UserDataContext),\n    [ miniPlayer2, setMiniPlayer2 ] = useContext(MiniPlayer2Context),\n    [spotifyTrackUri, setSpotifyTrackUri] = useContext(SpotifyTrackUriContext)\n\n    //props\n    const { db } = props\n\n    //states\n    const\n    [ chatDrawerOn, setChatDrawerOn ] = useState(false);\n\n\n    //life cycle methods\n    useEffect(()=> {\n        fetchUserData();\n    }, [])\n\n    useEffect(()=> {\n        if(userData) {\n            console.log('registering!!!!!!!!!!')\n            axios.post(`${backendRoute}/chats/registerUser`, userData)\n            .then(res=> console.log(res.data))\n            .catch(err=> console.log(err))\n        }\n    }, [userData])\n\n    //functions\n    const \n    fetchUserData = ()=> {\n        const config={\n            method: 'get',\n            url: \"https://api.spotify.com/v1/me\",\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization' : `Bearer ${spotifyToken}`,\n            }\n        }\n        axios(config).then((res)=> {\n            // console.log(res.data);\n            setUserData(res.data);\n        })\n        .catch(err=> {\n            console.log(err)\n            console.log(spotifyToken)\n            setSpotifyToken(null)\n            window.localStorage.clear()\n            // window.location()\n        })\n    },\n    toggleChatListDrawer = ()=> setChatDrawerOn(!chatDrawerOn),\n    miniPlayerFunc = ()=> {\n        // !miniPlayer2 ? <MiniPlayer /> : null \n        if(userData.product === 'open') return;\n        if(!miniPlayer2) return <MiniPlayer/> \n    }\n\n\n    return (\n        <div className={classes.spotifyRoot} >\n            <SpotifyNav userData={userData} toggleChatListDrawer={toggleChatListDrawer}/> \n            <Drawer\n                anchor={'right'}\n                open={chatDrawerOn}\n                onClose={()=> setChatDrawerOn(false)}\n                className = {classes.chatListDrawer}\n            >\n                    <ChatList db={db} \n                    toggleChatListDrawer={toggleChatListDrawer}\n                    />\n            </Drawer>\n            {\n            userData ?\n            <div className={classes.spotifyBody}>\n                <div className={classes.body1}>\n                    <MusicBox userData={userData}/>\n                    {/* {miniPlayerFunc()}  */}\n                </div>\n                <PlayBox/>\n                <div className={classes.body3}>\n                    <ChatList db={db} />\n                </div>\n            </div> \n            : null\n            }\n        </div>\n    );\n};\n\nexport default SpotifyRoot;","\nimport { makeStyles } from '@mui/styles';\n\nconst PlayBoxStyles = makeStyles(theme=> ({\n    '@media only screen and (min-width: 768px)': { //desktop\n        body2:{\n            width: '30vw',\n            '& img': {\n                maxWidth: '100%',\n                // marginTop: '5%',\n                borderRadius: '20px',\n            },\n            padding: '5px',\n            marginTop: '16px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n        },\n        imgReactAudioPlayer:{\n            display: 'none'\n        },\n    },\n    currentTrackInfo:{\n        display: 'flex', alignItems: 'center', flexDirection: 'column',\n        '& span': {\n            marginTop: '1rem'\n        },\n    },\n    currentSongImg:{\n        borderRadius: '5%',\n    },\n    noPremium:{\n        textAlign: 'center',\n        fontSize: '0.7rem',\n        color: '#ff9966',\n        marginBottom: '1rem',\n    },\n    '@media only screen and (max-width: 767px)': { //phones\n        // display: 'none !important'\n        body2:{\n            position: 'absolute',\n            bottom: '0',\n            zIndex: '1300',\n            backgroundColor: '#171821',\n        },\n        currentTrackInfo:{\n            display: 'none'\n        },\n        noPremium:{\n            display: 'none'\n        },\n        reactAudioPlayer:{\n            width: '100vw',\n            height: '8vh',\n            // backgroundColor: 'red',\n            display: 'flex',\n            justifyContent: 'space-evenly',\n            alignItems: 'center'\n        },\n        imgReactAudioPlayer:{\n            maxWidth: '20%',\n            maxHeight: '90%',\n            borderRadius: '50%'\n        },\n    },\n}))\n\nexport default PlayBoxStyles;","export default __webpack_public_path__ + \"static/media/spotify-logo.93e5215d.svg\";","import React, { useState, useContext, useEffect } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n//contexts\nimport { UserDataContext } from '../contexts/userDataContext';\nimport { SpotifyTrackUriContext } from '../contexts/spotifyTrackUriContext';\n//styles\nimport PlayBoxStyles from './styles/playBoxStyles'\nimport spotifyLogo from '../spotify-logo.svg'\n//mui\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@mui/icons-material/PauseCircleOutline';\n\nconst PlayBox = () => {\n    //styles\n    const classes = PlayBoxStyles();\n    //states\n    const\n    [currentPlaying, setCurrentPlaying] = useState(),\n    [isPlaying, setIsPlaying] = useState(false);\n    //variable\n    //contexts\n    const\n    [userData, setUserData] = useContext(UserDataContext),\n    [spotifyTrackUri, setSpotifyTrackUri] = useContext(SpotifyTrackUriContext);\n    //life cycle methods\n    useEffect(()=> {\n        if(spotifyTrackUri && spotifyTrackUri.data){\n            setCurrentPlaying(spotifyTrackUri.data.preview_url);\n        }\n    }, [spotifyTrackUri])\n    //functions\n    const\n    dispPauseButton = ()=> {return (\n        <span \n        className={classes.playPauseButt}\n        onClick={()=> setIsPlaying(false)}\n        >\n            <PauseCircleOutlineIcon/>\n        </span>\n    )},\n    dispPlayButton = ()=> {return (\n        <span \n        className={classes.playPauseButt}\n        onClick={()=> setIsPlaying(true)}\n        >\n            <PlayCircleOutlineIcon/>\n        </span>\n    )},\n    showCurrentTrack = ()=> {\n        let imgSrc;\n        if(spotifyTrackUri){\n            if(spotifyTrackUri && spotifyTrackUri.data && spotifyTrackUri.data.album) imgSrc = spotifyTrackUri.data.album.images[0].url\n            return (\n                <div className={classes.currentTrackInfo}>\n                    <img \n                        src={imgSrc} \n                        className={classes.currentSongImg}\n                    />\n                    <span>\n                        {spotifyTrackUri.trackName}\n                    </span>\n                    \n                </div>\n            )\n        }\n    };\n\n    return (\n    <div className={classes.body2}>\n        {\n            !spotifyTrackUri.uri ? \n            <div className={classes.currentTrackInfo}>\n                <img src={spotifyLogo} className={classes.currentSongImg}/>\n                <span>Select A Track To Play</span>\n            </div>\n            :\n            showCurrentTrack()\n        }\n        <div className={classes.reactAudioPlayer}>\n            { spotifyTrackUri && spotifyTrackUri.data && spotifyTrackUri.data.album ?\n            <img \n                src={spotifyTrackUri.data.album.images[0].url} \n                className={classes.imgReactAudioPlayer}\n            />\n            :null}\n            <ReactAudioPlayer src={currentPlaying} autoPlay controls />\n        </div>\n        {\n            spotifyTrackUri.uri && !currentPlaying ? <p className={classes.noPremium}>Preview Unavailable :(</p> : null\n        // spotifyTrackUri.uri ?\n            // currentPlaying ?\n                \n            // : <p className={classes.noPremium}>Preview Unavailable :(</p>\n        // :null\n        }\n        {\n            userData.product === 'open' ? \n            <div className={classes.noPremium}>\n                * Unfortunately Spotify Allows Only Premiums Users To Listen Full Tracks Here! *\n            </div>\n            : null\n        }\n    </div>\n    );\n};\n\nexport default PlayBox;","import { keyframes } from '@emotion/react';\nimport zIndex from '@mui/material/styles/zIndex';\nimport { makeStyles } from '@mui/styles';\n\nconst SpotifyStyles = makeStyles(theme=> ({\n    spotifyRoot: {\n        height: '100vh',\n        color: 'white',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    abhay: {\n        color: '#42ff75',\n        fontSize: '0.6rem'\n    },\n    kamble: {\n        color: 'white',\n        fontSize: '0.6rem'\n    },\n    '@keyframes nav': {\n        '0%': {},\n        '100%': {\n            // transform: 'scaleY(50%)'\n        }\n    },\n    spotifyBody:{\n        flex: '1',\n        '@media only screen and (min-width: 768px)': { //desktop\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        '@media only screen and (max-width: 767px)': { //phones\n            position: 'relative'\n        },\n    },\n    body3:{\n        maxWidth: '30vw',\n        '@media only screen and (max-width: 767px)': { //phones\n            display: 'none !important'\n        },\n    },\n    searchIcon:{\n        color: '#42ff75',\n        fontSize: 'large',\n    },\n    chatListDrawer: {\n        height: '50vh',\n        '@media only screen and (min-width: 767px)': { //desktop\n            display: 'none'\n        }\n    },\n}))\n\nexport default SpotifyStyles;","import React, { useContext, useState } from 'react';\nimport UseAuth from './hooks/useAuth';\nimport Config from '../config.json'\n\nimport { SpotifyTokenContext } from '../contexts/spotifyTokenContext';\nimport { Button } from '@mui/material'\n//components\nimport SpotifyNav from './spotifyNav';\nimport LoadingComp from '../loadingComp';\n//styles\nimport LoginStyles from './loginStyles'\n\nlet clientID, redirectUri;\n//\n\nconst SpotifyLogin = () => {\n    //styles\n    const classes = LoginStyles();\n\n    //variables\n    clientID = Config.spotifyclientID\n    process.env.NODE_ENV === \"development\" ? \n        redirectUri = Config.localhost : redirectUri = Config.productionHost\n\n    const authURL = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=code&redirect_uri=${redirectUri}&scope=streaming%20user-read-private%20user-read-email%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-read-currently-playing%20playlist-read-private%20playlist-read-private%20playlist-modify-public%20playlist-read-collaborative%20user-top-read%20user-read-recently-played%20user-read-playback-position%20app-remote-control`;\n    const code = new URLSearchParams(window.location.search).get('code');\n    let accessToken ;\n    \n    //contexts\n    const \n    [spotifytoken, setSpotifyToken] = useContext(SpotifyTokenContext);\n    //states\n    const [ clicked, setClicked ] = useState(false)\n\n\n    if(code) accessToken= UseAuth(code);\n    if(accessToken) {\n        setSpotifyToken(accessToken);\n        console.log(accessToken)\n    }else {\n        console.log('no access token');\n        // window.localStorage.clear();\n    }\n\n    return (\n        <div className={classes.spotifyLogin}>\n            <SpotifyNav loggedOut={true}/>\n            <div className={classes.pageBody}>\n            {\n            !code ?\n            <>\n            <div className={classes.loginButton} onClick={()=> setClicked(true)}>\n                <a href={authURL}>\n                <span className={classes.loginButt}>Login With Spotify</span>\n                </a>\n            </div>\n            <div \n            className={classes.description}\n            >\n                {clicked ? \n                    <p className={classes.takingToSpotify}>\n                    <LoadingComp description=\"Taking you to spotify's login page...\"/> \n                    </p> \n                : null}\n                <p>Chat with your friends and listen spotfiy togehter</p>\n            </div>\n            </>\n                :\n                <LoadingComp description=\"fetching data...\"/> \n            }\n            </div>\n        </div>\n    );\n};\n\nexport default SpotifyLogin;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Config from '../../config.json'\nconst UseAuth = (code) => {\n    const\n    [accessToken, setAccessToken] = useState(),\n    [refreshToken, setRefreshToken] = useState(),\n    [expiresIn, setExpiresIn] = useState();\n    let redirectUri, backendRoute;\n\n    if(process.env.NODE_ENV === \"development\"){\n        redirectUri = Config.localhost;\n        backendRoute = Config.localBackend;\n    }else{\n        redirectUri = Config.productionHost;\n        backendRoute = Config.productionBackend\n    }\n\n    //get acces, refresh token\n    useEffect(()=> {\n        axios.post(`${backendRoute}/spotify/login`, {\n            data:{\n                code,\n                redirectUri : redirectUri\n            }\n        }).then(res=> {\n            console.log(res.data);\n            setAccessToken(res.data.accessToken);\n            setRefreshToken(res.data.refreshToken);\n            setExpiresIn(res.data.expiresIn);\n            \n\n            window.localStorage.setItem('spotifyToken', res.data.accessToken)\n            window.localStorage.setItem('spotifyRefreshToken', res.data.refreshToken)\n            window.localStorage.setItem('spotifyExpiresIn', res.data.expiresIn)\n            window.history.pushState({}, null, '/');\n        }).catch(err=> {\n            console.log('spo err');\n            console.log(err);\n            console.log(code);\n            console.log('spo err');\n        })\n    }, [code])\n\n    //refresh token after expiry\n    // useEffect(()=> {\n    //     if(!refreshToken || !expiresIn) return;\n\n    //     const timeout = setInterval(()=> {\n    //         axios.post('https://us-central1-chatapp-8a77f.cloudfunctions.net/user/spotify/refresh', {\n    //             refreshToken\n    //         }).then(res=> {\n    //             setAccessToken(res.data.accessToken);\n    //             setExpiresIn(res.data.expiresIn);\n                \n    //             window.localStorage.setItem('spotifyToken', JSON.stringify(res.data.accessToken))\n    //         }).catch(err=> {\n    //             console.log(err);\n    //             window.location = '/spotify';\n    //         })\n    //     }, (expiresIn - 60) * 1000)\n\n    //     return ()=> clearInterval(timeout);\n    // }, [refreshToken, expiresIn])\n\n    return accessToken;\n};\n\nexport default UseAuth;","import { keyframes } from '@emotion/react';\nimport { makeStyles } from '@mui/styles';\n\nconst LoginStyles = makeStyles(theme=> ({\n    spotifyLogin: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh'\n    },\n    loadingDots: {\n        // backgroundColor: 'red',\n        fontSize: '10rem',\n        animationName: '$dotColors',\n        animationDuration: '2000ms',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'ease-in-out',\n        color: 'white'\n    },\n    '@keyframes dotColors': {\n        '0%': { color: 'white'},\n        '50%': { color: '#1DB954'},\n        // '75%': { color: 'black'},\n        '100%': { color: '#42ff75'},\n    }, \n    pageBody: {\n        display: 'flex',\n        alignItems: 'stretch',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flex: '1',\n        textAlign: 'center',\n        position: 'relative'\n    },\n    introText: {\n        color: 'white'\n    },\n    loginButton: {\n    },\n    loginButt: {\n        color: '#42ff75',\n        border: '1px solid #42ff75',\n        padding: '16px 32px',\n        borderRadius: '10px',\n        '&:hover': {\n            backgroundColor: '#42ff75',\n            color: 'white',\n        }\n    },\n    description: {\n        color: 'white',\n        textAlign: 'center',\n        // margin: '32px auto',\n        marginTop: '32px',\n        marginBottom: '32px',\n        fontSize: '0.9rem',\n        \n    },\n    takingToSpotify: {\n        animationName: '$animation1',\n        animationDuration: '1000ms',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        textAlign: 'center',\n        width: '99%'\n    },\n    '@keyframes animation1': {\n        '0%': { opacity: 0 },\n        '100%': { opacity: 1 }\n    },\n\n}))\n\nexport default LoginStyles;","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from \"firebase/app\";\nimport app from './firebaseConfig'\n// import firebase from 'firebase/compat/app';\nimport 'firebase/firestore';\nimport admin from 'firebase-admin'\nimport axios from 'axios'\nimport './App.css'\n\n//components\nimport SpotifyRoot from './spotify/spotifyRoot';\nimport SpotifyLogin from './spotify/spotifyLogin';\n\n//contexts\nimport { SpotifyTokenContext } from './contexts/spotifyTokenContext';\nimport { SpotifyTrackUriContext } from './contexts/spotifyTrackUriContext';\nimport { UserDataContext } from './contexts/userDataContext';\nimport { ChattingWithContext } from './contexts/chattingWithContext'\nimport { PlayingTrackContext } from './contexts/playingTrackContext'\nimport { MiniPlayer2Context } from './contexts/miniPlayer2Context'\n\n\n\nconst App = () => {\n  // states\n  const\n  [userData, setUserData] = useState(),\n  [spotifytoken, setSpotifyToken] = useState(),\n  [spotifyTrackUri, setSpotifyTrackUri] = useState({\n    uri: undefined, trackName: undefined, isSharingSong: undefined, data: undefined,\n  }),\n  [ playingTrack, setPlayingTrack ] = useState(false),\n  [chattingWith, setChattingWith] = useState(),\n  [ miniPlayer2, setMiniPlayer2 ] = useState(false);\n  \n  const db = getFirestore(app);\n\n  //life cycle\n  useEffect(()=> {\n    if(window.localStorage.getItem('spotifyToken')){\n      setSpotifyToken(window.localStorage.getItem('spotifyToken'))\n    }\n  }, [])\n\n  //functions \n\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <SpotifyTokenContext.Provider value={[spotifytoken, setSpotifyToken]}>\n      <UserDataContext.Provider value={[userData, setUserData]}>\n      <SpotifyTrackUriContext.Provider value={[spotifyTrackUri, setSpotifyTrackUri]}>\n      <PlayingTrackContext.Provider value={[ playingTrack, setPlayingTrack ]}>\n      <ChattingWithContext.Provider value={[chattingWith, setChattingWith]}>\n      <MiniPlayer2Context.Provider value={[ miniPlayer2, setMiniPlayer2 ]}>\n        <Routes>\n          <Route exact path='/' \n          element={spotifytoken ? <SpotifyRoot db={db}/> : <SpotifyLogin/>}\n          />\n          <Route exact path='/chats' \n          element={spotifytoken ? <SpotifyRoot db={db}/> : <SpotifyLogin/>}\n          />\n        </Routes>\n      </MiniPlayer2Context.Provider>\n      </ChattingWithContext.Provider>\n      </PlayingTrackContext.Provider>\n      </SpotifyTrackUriContext.Provider>\n      </UserDataContext.Provider>\n      </SpotifyTokenContext.Provider>\n    </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}